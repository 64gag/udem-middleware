// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.

#include "intellirobot.hh"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_1;



void
RTC::TimedVelocity::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  v >>= _n;
  w >>= _n;

}

void
RTC::TimedVelocity::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (::CORBA::Double&)v <<= _n;
  (::CORBA::Double&)w <<= _n;

}

void
RTC::TimedOdometry::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  x >>= _n;
  y >>= _n;
  theta >>= _n;

}

void
RTC::TimedOdometry::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (::CORBA::Double&)x <<= _n;
  (::CORBA::Double&)y <<= _n;
  (::CORBA::Double&)theta <<= _n;

}

void
RTC::TimedScan::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  (const TimedLongSeq&) scan >>= _n;

}

void
RTC::TimedScan::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (TimedLongSeq&)scan <<= _n;

}

void
RTC::Path::operator>>= (cdrStream &_n) const
{
  type >>= _n;
  coordinate >>= _n;
  x >>= _n;
  y >>= _n;
  theta >>= _n;
  v >>= _n;
  w >>= _n;
  r >>= _n;
  (const Time&) tm >>= _n;

}

void
RTC::Path::operator<<= (cdrStream &_n)
{
  (::CORBA::Short&)type <<= _n;
  (::CORBA::Short&)coordinate <<= _n;
  (::CORBA::Double&)x <<= _n;
  (::CORBA::Double&)y <<= _n;
  (::CORBA::Double&)theta <<= _n;
  (::CORBA::Double&)v <<= _n;
  (::CORBA::Double&)w <<= _n;
  (::CORBA::Double&)r <<= _n;
  (Time&)tm <<= _n;

}

void
RTC::PathSeq::operator>>= (cdrStream &_n) const
{
  (const _CORBA_Unbounded_Sequence< Path > &) path_list >>= _n;
  (const Time&) tm >>= _n;

}

void
RTC::PathSeq::operator<<= (cdrStream &_n)
{
  (_CORBA_Unbounded_Sequence< Path > &)path_list <<= _n;
  (Time&)tm <<= _n;

}

void
RTC::TimedObstacle::operator>>= (cdrStream &_n) const
{
  x >>= _n;
  y >>= _n;
  r >>= _n;
  (const Time&) tm >>= _n;

}

void
RTC::TimedObstacle::operator<<= (cdrStream &_n)
{
  (::CORBA::Double&)x <<= _n;
  (::CORBA::Double&)y <<= _n;
  (::CORBA::Double&)r <<= _n;
  (Time&)tm <<= _n;

}

void
RTC::TimedMovingObstacle::operator>>= (cdrStream &_n) const
{
  x >>= _n;
  y >>= _n;
  r >>= _n;
  theta >>= _n;
  vel >>= _n;
  (const Time&) tm >>= _n;

}

void
RTC::TimedMovingObstacle::operator<<= (cdrStream &_n)
{
  (::CORBA::Double&)x <<= _n;
  (::CORBA::Double&)y <<= _n;
  (::CORBA::Double&)r <<= _n;
  (::CORBA::Double&)theta <<= _n;
  (::CORBA::Double&)vel <<= _n;
  (Time&)tm <<= _n;

}

void
RTC::TimedObstacles::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  (const _CORBA_Unbounded_Sequence< TimedObstacle > &) obstacles >>= _n;

}

void
RTC::TimedObstacles::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (_CORBA_Unbounded_Sequence< TimedObstacle > &)obstacles <<= _n;

}

void
RTC::TimedMovingObstacles::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  (const _CORBA_Unbounded_Sequence< TimedMovingObstacle > &) obstacles >>= _n;

}

void
RTC::TimedMovingObstacles::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (_CORBA_Unbounded_Sequence< TimedMovingObstacle > &)obstacles <<= _n;

}

void
RTC::TimedParticle::operator>>= (cdrStream &_n) const
{
  x >>= _n;
  y >>= _n;
  theta >>= _n;
  w >>= _n;

}

void
RTC::TimedParticle::operator<<= (cdrStream &_n)
{
  (::CORBA::Double&)x <<= _n;
  (::CORBA::Double&)y <<= _n;
  (::CORBA::Double&)theta <<= _n;
  (::CORBA::Double&)w <<= _n;

}

void
RTC::TimedParticles::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  timestamp >>= _n;
  id >>= _n;
  (const _CORBA_Unbounded_Sequence< TimedParticle > &) particles >>= _n;

}

void
RTC::TimedParticles::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (::CORBA::Double&)timestamp <<= _n;
  (::CORBA::Long&)id <<= _n;
  (_CORBA_Unbounded_Sequence< TimedParticle > &)particles <<= _n;

}

void
RTC::TimedFormationMember::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  group >>= _n;
  shape >>= _n;
  leader_id >>= _n;
  (const Velocity2D&) input >>= _n;
  (const _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Short, 2, 2 > &) member >>= _n;

}

void
RTC::TimedFormationMember::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (::CORBA::Short&)group <<= _n;
  (::CORBA::Short&)shape <<= _n;
  (::CORBA::Short&)leader_id <<= _n;
  (Velocity2D&)input <<= _n;
  (_CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Short, 2, 2 > &)member <<= _n;

}

void
RTC::TimedFormationReference::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  id >>= _n;
  mode >>= _n;
  (const Pose2D&) lpos >>= _n;
  (const Velocity2D&) linput >>= _n;
  ref_x >>= _n;
  ref_y >>= _n;

}

void
RTC::TimedFormationReference::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (::CORBA::Short&)id <<= _n;
  (::CORBA::Short&)mode <<= _n;
  (Pose2D&)lpos <<= _n;
  (Velocity2D&)linput <<= _n;
  (::CORBA::Double&)ref_x <<= _n;
  (::CORBA::Double&)ref_y <<= _n;

}

void
RTC::TimedRobotData::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  id >>= _n;
  (const Pose2D&) pos >>= _n;
  (const Velocity2D&) vel >>= _n;

}

void
RTC::TimedRobotData::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (::CORBA::Short&)id <<= _n;
  (Pose2D&)pos <<= _n;
  (Velocity2D&)vel <<= _n;

}

void
RTC::FormationReferenceSeq::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  (const TimedFormationReference&) robot1 >>= _n;
  (const TimedFormationReference&) robot2 >>= _n;
  (const TimedFormationReference&) robot3 >>= _n;
  (const TimedFormationReference&) robot4 >>= _n;
  (const TimedFormationReference&) robot5 >>= _n;

}

void
RTC::FormationReferenceSeq::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (TimedFormationReference&)robot1 <<= _n;
  (TimedFormationReference&)robot2 <<= _n;
  (TimedFormationReference&)robot3 <<= _n;
  (TimedFormationReference&)robot4 <<= _n;
  (TimedFormationReference&)robot5 <<= _n;

}

void
RTC::FormationMemberSeq::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  (const TimedFormationMember&) group1 >>= _n;
  (const TimedFormationMember&) group2 >>= _n;
  (const TimedFormationMember&) group3 >>= _n;
  (const TimedFormationMember&) group4 >>= _n;
  (const TimedFormationMember&) group5 >>= _n;

}

void
RTC::FormationMemberSeq::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (TimedFormationMember&)group1 <<= _n;
  (TimedFormationMember&)group2 <<= _n;
  (TimedFormationMember&)group3 <<= _n;
  (TimedFormationMember&)group4 <<= _n;
  (TimedFormationMember&)group5 <<= _n;

}

void
RTC::RobotDataSeq::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  (const TimedRobotData&) robot1 >>= _n;
  (const TimedRobotData&) robot2 >>= _n;
  (const TimedRobotData&) robot3 >>= _n;
  (const TimedRobotData&) robot4 >>= _n;
  (const TimedRobotData&) robot5 >>= _n;

}

void
RTC::RobotDataSeq::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (TimedRobotData&)robot1 <<= _n;
  (TimedRobotData&)robot2 <<= _n;
  (TimedRobotData&)robot3 <<= _n;
  (TimedRobotData&)robot4 <<= _n;
  (TimedRobotData&)robot5 <<= _n;

}

void
RTC::Gga_message::operator>>= (cdrStream &_n) const
{
  (const _CORBA_Unbounded_Sequence_Char&) field00 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field01 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field02 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field03 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field04 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field05 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field06 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field07 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field08 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field09 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field10 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field11 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field12 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field13 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field14 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field15 >>= _n;

}

void
RTC::Gga_message::operator<<= (cdrStream &_n)
{
  (_CORBA_Unbounded_Sequence_Char&)field00 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field01 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field02 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field03 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field04 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field05 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field06 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field07 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field08 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field09 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field10 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field11 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field12 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field13 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field14 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field15 <<= _n;

}

void
RTC::Gll_message::operator>>= (cdrStream &_n) const
{
  (const _CORBA_Unbounded_Sequence_Char&) field00 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field01 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field02 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field03 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field04 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field05 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field06 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field07 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field08 >>= _n;

}

void
RTC::Gll_message::operator<<= (cdrStream &_n)
{
  (_CORBA_Unbounded_Sequence_Char&)field00 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field01 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field02 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field03 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field04 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field05 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field06 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field07 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field08 <<= _n;

}

void
RTC::Gns_message::operator>>= (cdrStream &_n) const
{
  (const _CORBA_Unbounded_Sequence_Char&) field00 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field01 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field02 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field03 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field04 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field05 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field06 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field07 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field08 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field09 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field10 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field11 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field12 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp_field00 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp_field01 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp_field07 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp_field11 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp_field12 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl_field00 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl_field01 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl_field07 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl_field11 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl_field12 >>= _n;

}

void
RTC::Gns_message::operator<<= (cdrStream &_n)
{
  (_CORBA_Unbounded_Sequence_Char&)field00 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field01 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field02 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field03 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field04 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field05 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field06 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field07 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field08 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field09 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field10 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field11 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field12 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp_field00 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp_field01 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp_field07 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp_field11 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp_field12 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl_field00 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl_field01 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl_field07 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl_field11 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl_field12 <<= _n;

}

void
RTC::Grs_message::operator>>= (cdrStream &_n) const
{
  (const _CORBA_Unbounded_Sequence_Char&) gp_field00 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp_field01 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp_field02 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp_field03_01 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp_field03_02 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp_field03_03 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp_field03_04 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp_field03_05 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp_field03_06 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp_field03_07 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp_field03_08 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp_field03_09 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp_field03_10 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp_field03_11 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp_field03_12 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp_field04 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl_field00 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl_field01 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl_field02 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl_field03_01 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl_field03_02 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl_field03_03 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl_field03_04 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl_field03_05 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl_field03_06 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl_field03_07 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl_field03_08 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl_field03_09 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl_field03_10 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl_field03_11 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl_field03_12 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl_field04 >>= _n;

}

void
RTC::Grs_message::operator<<= (cdrStream &_n)
{
  (_CORBA_Unbounded_Sequence_Char&)gp_field00 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp_field01 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp_field02 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp_field03_01 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp_field03_02 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp_field03_03 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp_field03_04 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp_field03_05 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp_field03_06 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp_field03_07 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp_field03_08 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp_field03_09 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp_field03_10 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp_field03_11 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp_field03_12 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp_field04 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl_field00 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl_field01 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl_field02 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl_field03_01 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl_field03_02 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl_field03_03 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl_field03_04 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl_field03_05 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl_field03_06 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl_field03_07 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl_field03_08 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl_field03_09 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl_field03_10 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl_field03_11 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl_field03_12 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl_field04 <<= _n;

}

void
RTC::Gsa_message::operator>>= (cdrStream &_n) const
{
  (const _CORBA_Unbounded_Sequence_Char&) gp_field00 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp_field01 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp_field02 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp_field03_01 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp_field03_02 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp_field03_03 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp_field03_04 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp_field03_05 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp_field03_06 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp_field03_07 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp_field03_08 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp_field03_09 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp_field03_10 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp_field03_11 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp_field03_12 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp_field04 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp_field05 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp_field06 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp_field07 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl_field00 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl_field01 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl_field02 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl_field03_01 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl_field03_02 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl_field03_03 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl_field03_04 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl_field03_05 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl_field03_06 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl_field03_07 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl_field03_08 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl_field03_09 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl_field03_10 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl_field03_11 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl_field03_12 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl_field04 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl_field05 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl_field06 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl_field07 >>= _n;

}

void
RTC::Gsa_message::operator<<= (cdrStream &_n)
{
  (_CORBA_Unbounded_Sequence_Char&)gp_field00 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp_field01 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp_field02 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp_field03_01 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp_field03_02 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp_field03_03 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp_field03_04 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp_field03_05 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp_field03_06 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp_field03_07 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp_field03_08 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp_field03_09 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp_field03_10 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp_field03_11 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp_field03_12 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp_field04 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp_field05 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp_field06 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp_field07 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl_field00 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl_field01 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl_field02 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl_field03_01 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl_field03_02 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl_field03_03 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl_field03_04 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl_field03_05 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl_field03_06 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl_field03_07 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl_field03_08 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl_field03_09 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl_field03_10 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl_field03_11 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl_field03_12 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl_field04 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl_field05 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl_field06 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl_field07 <<= _n;

}

void
RTC::Gst_message::operator>>= (cdrStream &_n) const
{
  (const _CORBA_Unbounded_Sequence_Char&) field00 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field01 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field02 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field03 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field04 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field05 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field06 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field07 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field08 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field09 >>= _n;

}

void
RTC::Gst_message::operator<<= (cdrStream &_n)
{
  (_CORBA_Unbounded_Sequence_Char&)field00 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field01 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field02 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field03 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field04 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field05 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field06 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field07 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field08 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field09 <<= _n;

}

void
RTC::Gsv_message::operator>>= (cdrStream &_n) const
{
  (const _CORBA_Unbounded_Sequence_Char&) gp1_field00 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp1_field01 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp1_field02 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp1_field03 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp1_field04_1_1 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp1_field04_1_2 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp1_field04_1_3 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp1_field04_1_4 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp1_field04_2_1 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp1_field04_2_2 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp1_field04_2_3 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp1_field04_2_4 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp1_field04_3_1 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp1_field04_3_2 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp1_field04_3_3 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp1_field04_3_4 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp1_field04_4_1 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp1_field04_4_2 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp1_field04_4_3 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp1_field04_4_4 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp1_field05 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp2_field00 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp2_field01 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp2_field02 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp2_field03 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp2_field04_1_1 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp2_field04_1_2 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp2_field04_1_3 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp2_field04_1_4 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp2_field04_2_1 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp2_field04_2_2 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp2_field04_2_3 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp2_field04_2_4 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp2_field04_3_1 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp2_field04_3_2 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp2_field04_3_3 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp2_field04_3_4 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp2_field04_4_1 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp2_field04_4_2 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp2_field04_4_3 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp2_field04_4_4 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp2_field05 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp3_field00 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp3_field01 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp3_field02 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp3_field03 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp3_field04_1_1 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp3_field04_1_2 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp3_field04_1_3 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp3_field04_1_4 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp3_field04_2_1 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp3_field04_2_2 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp3_field04_2_3 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp3_field04_2_4 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp3_field04_3_1 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp3_field04_3_2 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp3_field04_3_3 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp3_field04_3_4 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp3_field04_4_1 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp3_field04_4_2 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp3_field04_4_3 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp3_field04_4_4 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gp3_field05 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl1_field00 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl1_field01 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl1_field02 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl1_field03 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl1_field04_1_1 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl1_field04_1_2 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl1_field04_1_3 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl1_field04_1_4 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl1_field04_2_1 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl1_field04_2_2 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl1_field04_2_3 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl1_field04_2_4 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl1_field04_3_1 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl1_field04_3_2 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl1_field04_3_3 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl1_field04_3_4 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl1_field04_4_1 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl1_field04_4_2 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl1_field04_4_3 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl1_field04_4_4 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl1_field05 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl2_field00 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl2_field01 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl2_field02 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl2_field03 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl2_field04_1_1 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl2_field04_1_2 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl2_field04_1_3 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl2_field04_1_4 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl2_field04_2_1 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl2_field04_2_2 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl2_field04_2_3 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl2_field04_2_4 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl2_field04_3_1 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl2_field04_3_2 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl2_field04_3_3 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl2_field04_3_4 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl2_field04_4_1 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl2_field04_4_2 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl2_field04_4_3 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl2_field04_4_4 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl2_field05 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl3_field00 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl3_field01 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl3_field02 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl3_field03 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl3_field04_1_1 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl3_field04_1_2 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl3_field04_1_3 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl3_field04_1_4 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl3_field04_2_1 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl3_field04_2_2 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl3_field04_2_3 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl3_field04_2_4 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl3_field04_3_1 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl3_field04_3_2 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl3_field04_3_3 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl3_field04_3_4 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl3_field04_4_1 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl3_field04_4_2 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl3_field04_4_3 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl3_field04_4_4 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) gl3_field05 >>= _n;

}

void
RTC::Gsv_message::operator<<= (cdrStream &_n)
{
  (_CORBA_Unbounded_Sequence_Char&)gp1_field00 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp1_field01 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp1_field02 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp1_field03 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp1_field04_1_1 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp1_field04_1_2 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp1_field04_1_3 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp1_field04_1_4 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp1_field04_2_1 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp1_field04_2_2 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp1_field04_2_3 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp1_field04_2_4 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp1_field04_3_1 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp1_field04_3_2 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp1_field04_3_3 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp1_field04_3_4 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp1_field04_4_1 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp1_field04_4_2 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp1_field04_4_3 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp1_field04_4_4 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp1_field05 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp2_field00 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp2_field01 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp2_field02 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp2_field03 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp2_field04_1_1 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp2_field04_1_2 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp2_field04_1_3 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp2_field04_1_4 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp2_field04_2_1 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp2_field04_2_2 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp2_field04_2_3 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp2_field04_2_4 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp2_field04_3_1 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp2_field04_3_2 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp2_field04_3_3 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp2_field04_3_4 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp2_field04_4_1 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp2_field04_4_2 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp2_field04_4_3 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp2_field04_4_4 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp2_field05 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp3_field00 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp3_field01 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp3_field02 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp3_field03 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp3_field04_1_1 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp3_field04_1_2 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp3_field04_1_3 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp3_field04_1_4 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp3_field04_2_1 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp3_field04_2_2 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp3_field04_2_3 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp3_field04_2_4 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp3_field04_3_1 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp3_field04_3_2 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp3_field04_3_3 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp3_field04_3_4 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp3_field04_4_1 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp3_field04_4_2 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp3_field04_4_3 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp3_field04_4_4 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gp3_field05 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl1_field00 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl1_field01 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl1_field02 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl1_field03 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl1_field04_1_1 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl1_field04_1_2 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl1_field04_1_3 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl1_field04_1_4 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl1_field04_2_1 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl1_field04_2_2 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl1_field04_2_3 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl1_field04_2_4 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl1_field04_3_1 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl1_field04_3_2 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl1_field04_3_3 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl1_field04_3_4 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl1_field04_4_1 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl1_field04_4_2 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl1_field04_4_3 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl1_field04_4_4 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl1_field05 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl2_field00 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl2_field01 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl2_field02 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl2_field03 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl2_field04_1_1 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl2_field04_1_2 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl2_field04_1_3 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl2_field04_1_4 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl2_field04_2_1 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl2_field04_2_2 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl2_field04_2_3 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl2_field04_2_4 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl2_field04_3_1 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl2_field04_3_2 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl2_field04_3_3 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl2_field04_3_4 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl2_field04_4_1 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl2_field04_4_2 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl2_field04_4_3 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl2_field04_4_4 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl2_field05 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl3_field00 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl3_field01 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl3_field02 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl3_field03 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl3_field04_1_1 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl3_field04_1_2 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl3_field04_1_3 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl3_field04_1_4 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl3_field04_2_1 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl3_field04_2_2 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl3_field04_2_3 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl3_field04_2_4 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl3_field04_3_1 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl3_field04_3_2 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl3_field04_3_3 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl3_field04_3_4 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl3_field04_4_1 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl3_field04_4_2 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl3_field04_4_3 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl3_field04_4_4 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)gl3_field05 <<= _n;

}

void
RTC::Hdt_message::operator>>= (cdrStream &_n) const
{
  (const _CORBA_Unbounded_Sequence_Char&) field00 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field01 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field02 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field03 >>= _n;

}

void
RTC::Hdt_message::operator<<= (cdrStream &_n)
{
  (_CORBA_Unbounded_Sequence_Char&)field00 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field01 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field02 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field03 <<= _n;

}

void
RTC::Rmc_message::operator>>= (cdrStream &_n) const
{
  (const _CORBA_Unbounded_Sequence_Char&) field00 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field01 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field02 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field03 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field04 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field05 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field06 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field07 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field08 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field09 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field10 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field11 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field12 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field13 >>= _n;

}

void
RTC::Rmc_message::operator<<= (cdrStream &_n)
{
  (_CORBA_Unbounded_Sequence_Char&)field00 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field01 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field02 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field03 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field04 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field05 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field06 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field07 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field08 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field09 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field10 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field11 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field12 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field13 <<= _n;

}

void
RTC::Vtg_message::operator>>= (cdrStream &_n) const
{
  (const _CORBA_Unbounded_Sequence_Char&) field00 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field01 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field02 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field03 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field04 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field05 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field06 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field07 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field08 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field09 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field10 >>= _n;

}

void
RTC::Vtg_message::operator<<= (cdrStream &_n)
{
  (_CORBA_Unbounded_Sequence_Char&)field00 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field01 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field02 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field03 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field04 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field05 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field06 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field07 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field08 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field09 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field10 <<= _n;

}

void
RTC::Zda_message::operator>>= (cdrStream &_n) const
{
  (const _CORBA_Unbounded_Sequence_Char&) field00 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field01 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field02 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field03 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field04 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field05 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field06 >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) field07 >>= _n;

}

void
RTC::Zda_message::operator<<= (cdrStream &_n)
{
  (_CORBA_Unbounded_Sequence_Char&)field00 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field01 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field02 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field03 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field04 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field05 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field06 <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)field07 <<= _n;

}

void
RTC::TimedLegacyData::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  mode >>= _n;
  (const Gga_message&) gga >>= _n;
  (const Gll_message&) gll >>= _n;
  (const Gns_message&) gns >>= _n;
  (const Grs_message&) grs >>= _n;
  (const Gsa_message&) gsa >>= _n;
  (const Gst_message&) gst >>= _n;
  (const Gsv_message&) gsv >>= _n;
  (const Hdt_message&) hdt >>= _n;
  (const Rmc_message&) rmc >>= _n;
  (const Vtg_message&) vtg >>= _n;
  (const Zda_message&) zda >>= _n;

}

void
RTC::TimedLegacyData::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (::CORBA::UShort&)mode <<= _n;
  (Gga_message&)gga <<= _n;
  (Gll_message&)gll <<= _n;
  (Gns_message&)gns <<= _n;
  (Grs_message&)grs <<= _n;
  (Gsa_message&)gsa <<= _n;
  (Gst_message&)gst <<= _n;
  (Gsv_message&)gsv <<= _n;
  (Hdt_message&)hdt <<= _n;
  (Rmc_message&)rmc <<= _n;
  (Vtg_message&)vtg <<= _n;
  (Zda_message&)zda <<= _n;

}

void
RTC::TimedJgd2000Position::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  latitude >>= _n;
  longitude >>= _n;

}

void
RTC::TimedJgd2000Position::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (::CORBA::Double&)latitude <<= _n;
  (::CORBA::Double&)longitude <<= _n;

}

void
RTC::TimedGpsData::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  (const TimedJgd2000Position&) Jgd2000Position >>= _n;

}

void
RTC::TimedGpsData::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (TimedJgd2000Position&)Jgd2000Position <<= _n;

}

void
RTC::Timed19Position::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  x >>= _n;
  y >>= _n;

}

void
RTC::Timed19Position::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (::CORBA::Double&)x <<= _n;
  (::CORBA::Double&)y <<= _n;

}

void
RTC::TimedRobotPosition::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  x >>= _n;
  y >>= _n;

}

void
RTC::TimedRobotPosition::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (::CORBA::Double&)x <<= _n;
  (::CORBA::Double&)y <<= _n;

}

void
RTC::TimedMapData::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  mode >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) location >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) mapset >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) type >>= _n;
  origin_x >>= _n;
  origin_y >>= _n;
  size_x >>= _n;
  size_y >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) explanation >>= _n;
  map_origin_x >>= _n;
  map_origin_y >>= _n;
  map_size_x >>= _n;
  map_size_y >>= _n;
  pixel_size_x >>= _n;
  pixel_size_y >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) category >>= _n;
  (const _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::ULong, 4, 4 > &) mapdata >>= _n;

}

void
RTC::TimedMapData::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (::CORBA::UShort&)mode <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)location <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)mapset <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)type <<= _n;
  (::CORBA::Long&)origin_x <<= _n;
  (::CORBA::Long&)origin_y <<= _n;
  (::CORBA::ULong&)size_x <<= _n;
  (::CORBA::ULong&)size_y <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)explanation <<= _n;
  (::CORBA::Long&)map_origin_x <<= _n;
  (::CORBA::Long&)map_origin_y <<= _n;
  (::CORBA::ULong&)map_size_x <<= _n;
  (::CORBA::ULong&)map_size_y <<= _n;
  (::CORBA::ULong&)pixel_size_x <<= _n;
  (::CORBA::ULong&)pixel_size_y <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)category <<= _n;
  (_CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::ULong, 4, 4 > &)mapdata <<= _n;

}

void
RTC::Arc::operator>>= (cdrStream &_n) const
{
  start_id >>= _n;
  end_id >>= _n;
  cost >>= _n;

}

void
RTC::Arc::operator<<= (cdrStream &_n)
{
  (::CORBA::ULong&)start_id <<= _n;
  (::CORBA::ULong&)end_id <<= _n;
  (::CORBA::Double&)cost <<= _n;

}

void
RTC::Node::operator>>= (cdrStream &_n) const
{
  id >>= _n;
  x >>= _n;
  y >>= _n;
  theta >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) explanation >>= _n;

}

void
RTC::Node::operator<<= (cdrStream &_n)
{
  (::CORBA::ULong&)id <<= _n;
  (::CORBA::Double&)x <<= _n;
  (::CORBA::Double&)y <<= _n;
  (::CORBA::Double&)theta <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)explanation <<= _n;

}

void
RTC::TimedArcNode::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  (const _CORBA_Unbounded_Sequence< Arc > &) arc_data >>= _n;
  (const _CORBA_Unbounded_Sequence< Node > &) node_data >>= _n;

}

void
RTC::TimedArcNode::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (_CORBA_Unbounded_Sequence< Arc > &)arc_data <<= _n;
  (_CORBA_Unbounded_Sequence< Node > &)node_data <<= _n;

}

void
RTC::Line::operator>>= (cdrStream &_n) const
{
  x >>= _n;
  y >>= _n;
  theta >>= _n;
  r >>= _n;

}

void
RTC::Line::operator<<= (cdrStream &_n)
{
  (::CORBA::Double&)x <<= _n;
  (::CORBA::Double&)y <<= _n;
  (::CORBA::Double&)theta <<= _n;
  (::CORBA::Double&)r <<= _n;

}

void
RTC::Circle::operator>>= (cdrStream &_n) const
{
  x >>= _n;
  y >>= _n;
  r >>= _n;

}

void
RTC::Circle::operator<<= (cdrStream &_n)
{
  (::CORBA::Double&)x <<= _n;
  (::CORBA::Double&)y <<= _n;
  (::CORBA::Double&)r <<= _n;

}

void
RTC::TimedLandmark::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  (const _CORBA_Unbounded_Sequence< Line > &) line_data >>= _n;
  (const _CORBA_Unbounded_Sequence< Circle > &) circle_data >>= _n;

}

void
RTC::TimedLandmark::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (_CORBA_Unbounded_Sequence< Line > &)line_data <<= _n;
  (_CORBA_Unbounded_Sequence< Circle > &)circle_data <<= _n;

}

void
RTC::TimedMapOrder::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  trigger >>= _n;
  mode >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) location >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) mapset >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) type >>= _n;
  origin_x >>= _n;
  origin_y >>= _n;
  size_x >>= _n;
  size_y >>= _n;

}

void
RTC::TimedMapOrder::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (::CORBA::UShort&)trigger <<= _n;
  (::CORBA::UShort&)mode <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)location <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)mapset <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)type <<= _n;
  (::CORBA::Long&)origin_x <<= _n;
  (::CORBA::Long&)origin_y <<= _n;
  (::CORBA::ULong&)size_x <<= _n;
  (::CORBA::ULong&)size_y <<= _n;

}

void
RTC::RobotPosition::operator>>= (cdrStream &_n) const
{
  x >>= _n;
  y >>= _n;

}

void
RTC::RobotPosition::operator<<= (cdrStream &_n)
{
  (::CORBA::Double&)x <<= _n;
  (::CORBA::Double&)y <<= _n;

}

void
RTC::TimedPath::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  (const _CORBA_Unbounded_Sequence< RobotPosition > &) path_data >>= _n;

}

void
RTC::TimedPath::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (_CORBA_Unbounded_Sequence< RobotPosition > &)path_data <<= _n;

}

void
RTC::TimedMeshOrder::operator>>= (cdrStream &_n) const
{
  (const Time&) tm >>= _n;
  trigger >>= _n;
  mode >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) location >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) mapset >>= _n;
  (const _CORBA_Unbounded_Sequence_Char&) type >>= _n;
  origin_x >>= _n;
  origin_y >>= _n;
  size_x >>= _n;
  size_y >>= _n;
  pixel_size_x >>= _n;
  pixel_size_y >>= _n;

}

void
RTC::TimedMeshOrder::operator<<= (cdrStream &_n)
{
  (Time&)tm <<= _n;
  (::CORBA::UShort&)trigger <<= _n;
  (::CORBA::UShort&)mode <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)location <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)mapset <<= _n;
  (_CORBA_Unbounded_Sequence_Char&)type <<= _n;
  (::CORBA::Long&)origin_x <<= _n;
  (::CORBA::Long&)origin_y <<= _n;
  (::CORBA::ULong&)size_x <<= _n;
  (::CORBA::ULong&)size_y <<= _n;
  (::CORBA::ULong&)pixel_size_x <<= _n;
  (::CORBA::ULong&)pixel_size_y <<= _n;

}

void
IIS::TanakaTest::operator>>= (cdrStream &_n) const
{
  (const RTC::Time&) tm >>= _n;
  (const _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Long, 4, 4 > &) id >>= _n;
  (const RTC::Pose2D&) data >>= _n;
  (const _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Double, 8, 8 > &) error >>= _n;

}

void
IIS::TanakaTest::operator<<= (cdrStream &_n)
{
  (RTC::Time&)tm <<= _n;
  (_CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Long, 4, 4 > &)id <<= _n;
  (RTC::Pose2D&)data <<= _n;
  (_CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Double, 8, 8 > &)error <<= _n;

}

void
IIS::TimedVelocity::operator>>= (cdrStream &_n) const
{
  (const RTC::Time&) tm >>= _n;
  (const _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Long, 4, 4 > &) id >>= _n;
  vx >>= _n;
  vy >>= _n;
  w >>= _n;
  (const _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Double, 8, 8 > &) error >>= _n;

}

void
IIS::TimedVelocity::operator<<= (cdrStream &_n)
{
  (RTC::Time&)tm <<= _n;
  (_CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Long, 4, 4 > &)id <<= _n;
  (::CORBA::Double&)vx <<= _n;
  (::CORBA::Double&)vy <<= _n;
  (::CORBA::Double&)w <<= _n;
  (_CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Double, 8, 8 > &)error <<= _n;

}

void
IIS::TimedPosition::operator>>= (cdrStream &_n) const
{
  (const RTC::Time&) tm >>= _n;
  (const _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Long, 4, 4 > &) id >>= _n;
  x >>= _n;
  y >>= _n;
  theta >>= _n;
  (const _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Double, 8, 8 > &) error >>= _n;

}

void
IIS::TimedPosition::operator<<= (cdrStream &_n)
{
  (RTC::Time&)tm <<= _n;
  (_CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Long, 4, 4 > &)id <<= _n;
  (::CORBA::Double&)x <<= _n;
  (::CORBA::Double&)y <<= _n;
  (::CORBA::Double&)theta <<= _n;
  (_CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Double, 8, 8 > &)error <<= _n;

}

void
IIS::TimedPose2D::operator>>= (cdrStream &_n) const
{
  (const RTC::Time&) tm >>= _n;
  (const _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Long, 4, 4 > &) id >>= _n;
  (const RTC::Pose2D&) data >>= _n;
  (const _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Double, 8, 8 > &) error >>= _n;

}

void
IIS::TimedPose2D::operator<<= (cdrStream &_n)
{
  (RTC::Time&)tm <<= _n;
  (_CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Long, 4, 4 > &)id <<= _n;
  (RTC::Pose2D&)data <<= _n;
  (_CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Double, 8, 8 > &)error <<= _n;

}

void
IIS::TimedPose2DSeq::operator>>= (cdrStream &_n) const
{
  (const RTC::Time&) tm >>= _n;
  (const _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Long, 4, 4 > &) id >>= _n;
  (const _CORBA_Unbounded_Sequence< RTC::Pose2D > &) data >>= _n;
  (const _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Double, 8, 8 > &) error >>= _n;

}

void
IIS::TimedPose2DSeq::operator<<= (cdrStream &_n)
{
  (RTC::Time&)tm <<= _n;
  (_CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Long, 4, 4 > &)id <<= _n;
  (_CORBA_Unbounded_Sequence< RTC::Pose2D > &)data <<= _n;
  (_CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Double, 8, 8 > &)error <<= _n;

}

void
IIS::TimedPath2DSeq::operator>>= (cdrStream &_n) const
{
  (const RTC::Time&) tm >>= _n;
  (const _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Long, 4, 4 > &) id >>= _n;
  (const _CORBA_Unbounded_Sequence< RTC::Pose2D > &) pose >>= _n;
  (const _CORBA_Unbounded_Sequence< RTC::Velocity2D > &) velocity >>= _n;
  (const _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Double, 8, 8 > &) error >>= _n;

}

void
IIS::TimedPath2DSeq::operator<<= (cdrStream &_n)
{
  (RTC::Time&)tm <<= _n;
  (_CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Long, 4, 4 > &)id <<= _n;
  (_CORBA_Unbounded_Sequence< RTC::Pose2D > &)pose <<= _n;
  (_CORBA_Unbounded_Sequence< RTC::Velocity2D > &)velocity <<= _n;
  (_CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Double, 8, 8 > &)error <<= _n;

}

void
IIS::TimedVelocity2D::operator>>= (cdrStream &_n) const
{
  (const RTC::Time&) tm >>= _n;
  (const _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Long, 4, 4 > &) id >>= _n;
  (const RTC::Velocity2D&) data >>= _n;
  (const _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Double, 8, 8 > &) error >>= _n;

}

void
IIS::TimedVelocity2D::operator<<= (cdrStream &_n)
{
  (RTC::Time&)tm <<= _n;
  (_CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Long, 4, 4 > &)id <<= _n;
  (RTC::Velocity2D&)data <<= _n;
  (_CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Double, 8, 8 > &)error <<= _n;

}

void
IIS::TimedState::operator>>= (cdrStream &_n) const
{
  (const RTC::Time&) tm >>= _n;
  id >>= _n;
  _n.marshalBoolean(isStop);

}

void
IIS::TimedState::operator<<= (cdrStream &_n)
{
  (RTC::Time&)tm <<= _n;
  (::CORBA::Long&)id <<= _n;
  isStop = _n.unmarshalBoolean();

}

