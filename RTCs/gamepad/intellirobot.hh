// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.
#ifndef __intellirobot_hh__
#define __intellirobot_hh__

#ifndef __CORBA_H_EXTERNAL_GUARD__
#include <omniORB4/CORBA.h>
#endif

#ifndef  USE_stub_in_nt_dll
# define USE_stub_in_nt_dll_NOT_DEFINED_intellirobot
#endif
#ifndef  USE_core_stub_in_nt_dll
# define USE_core_stub_in_nt_dll_NOT_DEFINED_intellirobot
#endif
#ifndef  USE_dyn_stub_in_nt_dll
# define USE_dyn_stub_in_nt_dll_NOT_DEFINED_intellirobot
#endif



#ifndef __BasicDataType_hh_EXTERNAL_GUARD__
#define __BasicDataType_hh_EXTERNAL_GUARD__
#include <BasicDataType.hh>
#endif
#ifndef __ExtendedDataTypes_hh_EXTERNAL_GUARD__
#define __ExtendedDataTypes_hh_EXTERNAL_GUARD__
#include <ExtendedDataTypes.hh>
#endif



#ifdef USE_stub_in_nt_dll
# ifndef USE_core_stub_in_nt_dll
#  define USE_core_stub_in_nt_dll
# endif
# ifndef USE_dyn_stub_in_nt_dll
#  define USE_dyn_stub_in_nt_dll
# endif
#endif

#ifdef _core_attr
# error "A local CPP macro _core_attr has already been defined."
#else
# ifdef  USE_core_stub_in_nt_dll
#  define _core_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _core_attr
# endif
#endif

#ifdef _dyn_attr
# error "A local CPP macro _dyn_attr has already been defined."
#else
# ifdef  USE_dyn_stub_in_nt_dll
#  define _dyn_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _dyn_attr
# endif
#endif





_CORBA_MODULE RTC

_CORBA_MODULE_BEG

  struct TimedVelocity {
    typedef _CORBA_ConstrType_Fix_Var<TimedVelocity> _var_type;

    
    Time tm;

    ::CORBA::Double v;

    ::CORBA::Double w;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedVelocity::_var_type TimedVelocity_var;

  typedef TimedVelocity& TimedVelocity_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedVelocity;

  struct TimedOdometry {
    typedef _CORBA_ConstrType_Fix_Var<TimedOdometry> _var_type;

    
    Time tm;

    ::CORBA::Double x;

    ::CORBA::Double y;

    ::CORBA::Double theta;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedOdometry::_var_type TimedOdometry_var;

  typedef TimedOdometry& TimedOdometry_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedOdometry;

  struct TimedScan {
    typedef _CORBA_ConstrType_Variable_Var<TimedScan> _var_type;

    
    Time tm;

    TimedLongSeq scan;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedScan::_var_type TimedScan_var;

  typedef _CORBA_ConstrType_Variable_OUT_arg< TimedScan,TimedScan_var > TimedScan_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedScan;

  struct Path {
    typedef _CORBA_ConstrType_Fix_Var<Path> _var_type;

    
    ::CORBA::Short type;

    ::CORBA::Short coordinate;

    ::CORBA::Double x;

    ::CORBA::Double y;

    ::CORBA::Double theta;

    ::CORBA::Double v;

    ::CORBA::Double w;

    ::CORBA::Double r;

    Time tm;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef Path::_var_type Path_var;

  typedef Path& Path_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Path;

  struct PathSeq {
    typedef _CORBA_ConstrType_Variable_Var<PathSeq> _var_type;

    
    typedef _CORBA_Unbounded_Sequence< Path >  _path_list_seq;
    _path_list_seq path_list;

    Time tm;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef PathSeq::_var_type PathSeq_var;

  typedef _CORBA_ConstrType_Variable_OUT_arg< PathSeq,PathSeq_var > PathSeq_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_PathSeq;

  struct TimedObstacle {
    typedef _CORBA_ConstrType_Fix_Var<TimedObstacle> _var_type;

    
    ::CORBA::Double x;

    ::CORBA::Double y;

    ::CORBA::Double r;

    Time tm;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedObstacle::_var_type TimedObstacle_var;

  typedef TimedObstacle& TimedObstacle_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedObstacle;

  struct TimedMovingObstacle {
    typedef _CORBA_ConstrType_Fix_Var<TimedMovingObstacle> _var_type;

    
    ::CORBA::Double x;

    ::CORBA::Double y;

    ::CORBA::Double r;

    ::CORBA::Double theta;

    ::CORBA::Double vel;

    Time tm;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedMovingObstacle::_var_type TimedMovingObstacle_var;

  typedef TimedMovingObstacle& TimedMovingObstacle_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedMovingObstacle;

  struct TimedObstacles {
    typedef _CORBA_ConstrType_Variable_Var<TimedObstacles> _var_type;

    
    Time tm;

    typedef _CORBA_Unbounded_Sequence< TimedObstacle >  _obstacles_seq;
    _obstacles_seq obstacles;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedObstacles::_var_type TimedObstacles_var;

  typedef _CORBA_ConstrType_Variable_OUT_arg< TimedObstacles,TimedObstacles_var > TimedObstacles_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedObstacles;

  struct TimedMovingObstacles {
    typedef _CORBA_ConstrType_Variable_Var<TimedMovingObstacles> _var_type;

    
    Time tm;

    typedef _CORBA_Unbounded_Sequence< TimedMovingObstacle >  _obstacles_seq;
    _obstacles_seq obstacles;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedMovingObstacles::_var_type TimedMovingObstacles_var;

  typedef _CORBA_ConstrType_Variable_OUT_arg< TimedMovingObstacles,TimedMovingObstacles_var > TimedMovingObstacles_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedMovingObstacles;

  struct TimedParticle {
    typedef _CORBA_ConstrType_Fix_Var<TimedParticle> _var_type;

    
    ::CORBA::Double x;

    ::CORBA::Double y;

    ::CORBA::Double theta;

    ::CORBA::Double w;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedParticle::_var_type TimedParticle_var;

  typedef TimedParticle& TimedParticle_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedParticle;

  struct TimedParticles {
    typedef _CORBA_ConstrType_Variable_Var<TimedParticles> _var_type;

    
    Time tm;

    ::CORBA::Double timestamp;

    ::CORBA::Long id;

    typedef _CORBA_Unbounded_Sequence< TimedParticle >  _particles_seq;
    _particles_seq particles;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedParticles::_var_type TimedParticles_var;

  typedef _CORBA_ConstrType_Variable_OUT_arg< TimedParticles,TimedParticles_var > TimedParticles_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedParticles;

  struct TimedFormationMember {
    typedef _CORBA_ConstrType_Variable_Var<TimedFormationMember> _var_type;

    
    Time tm;

    ::CORBA::Short group;

    ::CORBA::Short shape;

    ::CORBA::Short leader_id;

    Velocity2D input;

    typedef _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Short, 2, 2 >  _member_seq;
    _member_seq member;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedFormationMember::_var_type TimedFormationMember_var;

  typedef _CORBA_ConstrType_Variable_OUT_arg< TimedFormationMember,TimedFormationMember_var > TimedFormationMember_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedFormationMember;

  struct TimedFormationReference {
    typedef _CORBA_ConstrType_Fix_Var<TimedFormationReference> _var_type;

    
    Time tm;

    ::CORBA::Short id;

    ::CORBA::Short mode;

    Pose2D lpos;

    Velocity2D linput;

    ::CORBA::Double ref_x;

    ::CORBA::Double ref_y;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedFormationReference::_var_type TimedFormationReference_var;

  typedef TimedFormationReference& TimedFormationReference_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedFormationReference;

  struct TimedRobotData {
    typedef _CORBA_ConstrType_Fix_Var<TimedRobotData> _var_type;

    
    Time tm;

    ::CORBA::Short id;

    Pose2D pos;

    Velocity2D vel;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedRobotData::_var_type TimedRobotData_var;

  typedef TimedRobotData& TimedRobotData_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedRobotData;

  struct FormationReferenceSeq {
    typedef _CORBA_ConstrType_Fix_Var<FormationReferenceSeq> _var_type;

    
    Time tm;

    TimedFormationReference robot1;

    TimedFormationReference robot2;

    TimedFormationReference robot3;

    TimedFormationReference robot4;

    TimedFormationReference robot5;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef FormationReferenceSeq::_var_type FormationReferenceSeq_var;

  typedef FormationReferenceSeq& FormationReferenceSeq_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_FormationReferenceSeq;

  struct FormationMemberSeq {
    typedef _CORBA_ConstrType_Variable_Var<FormationMemberSeq> _var_type;

    
    Time tm;

    TimedFormationMember group1;

    TimedFormationMember group2;

    TimedFormationMember group3;

    TimedFormationMember group4;

    TimedFormationMember group5;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef FormationMemberSeq::_var_type FormationMemberSeq_var;

  typedef _CORBA_ConstrType_Variable_OUT_arg< FormationMemberSeq,FormationMemberSeq_var > FormationMemberSeq_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_FormationMemberSeq;

  struct RobotDataSeq {
    typedef _CORBA_ConstrType_Fix_Var<RobotDataSeq> _var_type;

    
    Time tm;

    TimedRobotData robot1;

    TimedRobotData robot2;

    TimedRobotData robot3;

    TimedRobotData robot4;

    TimedRobotData robot5;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef RobotDataSeq::_var_type RobotDataSeq_var;

  typedef RobotDataSeq& RobotDataSeq_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_RobotDataSeq;

  struct Gga_message {
    typedef _CORBA_ConstrType_Variable_Var<Gga_message> _var_type;

    
    typedef _CORBA_Unbounded_Sequence_Char _field00_seq;
    _field00_seq field00;

    typedef _CORBA_Unbounded_Sequence_Char _field01_seq;
    _field01_seq field01;

    typedef _CORBA_Unbounded_Sequence_Char _field02_seq;
    _field02_seq field02;

    typedef _CORBA_Unbounded_Sequence_Char _field03_seq;
    _field03_seq field03;

    typedef _CORBA_Unbounded_Sequence_Char _field04_seq;
    _field04_seq field04;

    typedef _CORBA_Unbounded_Sequence_Char _field05_seq;
    _field05_seq field05;

    typedef _CORBA_Unbounded_Sequence_Char _field06_seq;
    _field06_seq field06;

    typedef _CORBA_Unbounded_Sequence_Char _field07_seq;
    _field07_seq field07;

    typedef _CORBA_Unbounded_Sequence_Char _field08_seq;
    _field08_seq field08;

    typedef _CORBA_Unbounded_Sequence_Char _field09_seq;
    _field09_seq field09;

    typedef _CORBA_Unbounded_Sequence_Char _field10_seq;
    _field10_seq field10;

    typedef _CORBA_Unbounded_Sequence_Char _field11_seq;
    _field11_seq field11;

    typedef _CORBA_Unbounded_Sequence_Char _field12_seq;
    _field12_seq field12;

    typedef _CORBA_Unbounded_Sequence_Char _field13_seq;
    _field13_seq field13;

    typedef _CORBA_Unbounded_Sequence_Char _field14_seq;
    _field14_seq field14;

    typedef _CORBA_Unbounded_Sequence_Char _field15_seq;
    _field15_seq field15;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef Gga_message::_var_type Gga_message_var;

  typedef _CORBA_ConstrType_Variable_OUT_arg< Gga_message,Gga_message_var > Gga_message_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Gga_message;

  struct Gll_message {
    typedef _CORBA_ConstrType_Variable_Var<Gll_message> _var_type;

    
    typedef _CORBA_Unbounded_Sequence_Char _field00_seq;
    _field00_seq field00;

    typedef _CORBA_Unbounded_Sequence_Char _field01_seq;
    _field01_seq field01;

    typedef _CORBA_Unbounded_Sequence_Char _field02_seq;
    _field02_seq field02;

    typedef _CORBA_Unbounded_Sequence_Char _field03_seq;
    _field03_seq field03;

    typedef _CORBA_Unbounded_Sequence_Char _field04_seq;
    _field04_seq field04;

    typedef _CORBA_Unbounded_Sequence_Char _field05_seq;
    _field05_seq field05;

    typedef _CORBA_Unbounded_Sequence_Char _field06_seq;
    _field06_seq field06;

    typedef _CORBA_Unbounded_Sequence_Char _field07_seq;
    _field07_seq field07;

    typedef _CORBA_Unbounded_Sequence_Char _field08_seq;
    _field08_seq field08;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef Gll_message::_var_type Gll_message_var;

  typedef _CORBA_ConstrType_Variable_OUT_arg< Gll_message,Gll_message_var > Gll_message_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Gll_message;

  struct Gns_message {
    typedef _CORBA_ConstrType_Variable_Var<Gns_message> _var_type;

    
    typedef _CORBA_Unbounded_Sequence_Char _field00_seq;
    _field00_seq field00;

    typedef _CORBA_Unbounded_Sequence_Char _field01_seq;
    _field01_seq field01;

    typedef _CORBA_Unbounded_Sequence_Char _field02_seq;
    _field02_seq field02;

    typedef _CORBA_Unbounded_Sequence_Char _field03_seq;
    _field03_seq field03;

    typedef _CORBA_Unbounded_Sequence_Char _field04_seq;
    _field04_seq field04;

    typedef _CORBA_Unbounded_Sequence_Char _field05_seq;
    _field05_seq field05;

    typedef _CORBA_Unbounded_Sequence_Char _field06_seq;
    _field06_seq field06;

    typedef _CORBA_Unbounded_Sequence_Char _field07_seq;
    _field07_seq field07;

    typedef _CORBA_Unbounded_Sequence_Char _field08_seq;
    _field08_seq field08;

    typedef _CORBA_Unbounded_Sequence_Char _field09_seq;
    _field09_seq field09;

    typedef _CORBA_Unbounded_Sequence_Char _field10_seq;
    _field10_seq field10;

    typedef _CORBA_Unbounded_Sequence_Char _field11_seq;
    _field11_seq field11;

    typedef _CORBA_Unbounded_Sequence_Char _field12_seq;
    _field12_seq field12;

    typedef _CORBA_Unbounded_Sequence_Char _gp_field00_seq;
    _gp_field00_seq gp_field00;

    typedef _CORBA_Unbounded_Sequence_Char _gp_field01_seq;
    _gp_field01_seq gp_field01;

    typedef _CORBA_Unbounded_Sequence_Char _gp_field07_seq;
    _gp_field07_seq gp_field07;

    typedef _CORBA_Unbounded_Sequence_Char _gp_field11_seq;
    _gp_field11_seq gp_field11;

    typedef _CORBA_Unbounded_Sequence_Char _gp_field12_seq;
    _gp_field12_seq gp_field12;

    typedef _CORBA_Unbounded_Sequence_Char _gl_field00_seq;
    _gl_field00_seq gl_field00;

    typedef _CORBA_Unbounded_Sequence_Char _gl_field01_seq;
    _gl_field01_seq gl_field01;

    typedef _CORBA_Unbounded_Sequence_Char _gl_field07_seq;
    _gl_field07_seq gl_field07;

    typedef _CORBA_Unbounded_Sequence_Char _gl_field11_seq;
    _gl_field11_seq gl_field11;

    typedef _CORBA_Unbounded_Sequence_Char _gl_field12_seq;
    _gl_field12_seq gl_field12;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef Gns_message::_var_type Gns_message_var;

  typedef _CORBA_ConstrType_Variable_OUT_arg< Gns_message,Gns_message_var > Gns_message_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Gns_message;

  struct Grs_message {
    typedef _CORBA_ConstrType_Variable_Var<Grs_message> _var_type;

    
    typedef _CORBA_Unbounded_Sequence_Char _gp_field00_seq;
    _gp_field00_seq gp_field00;

    typedef _CORBA_Unbounded_Sequence_Char _gp_field01_seq;
    _gp_field01_seq gp_field01;

    typedef _CORBA_Unbounded_Sequence_Char _gp_field02_seq;
    _gp_field02_seq gp_field02;

    typedef _CORBA_Unbounded_Sequence_Char _gp_field03_01_seq;
    _gp_field03_01_seq gp_field03_01;

    typedef _CORBA_Unbounded_Sequence_Char _gp_field03_02_seq;
    _gp_field03_02_seq gp_field03_02;

    typedef _CORBA_Unbounded_Sequence_Char _gp_field03_03_seq;
    _gp_field03_03_seq gp_field03_03;

    typedef _CORBA_Unbounded_Sequence_Char _gp_field03_04_seq;
    _gp_field03_04_seq gp_field03_04;

    typedef _CORBA_Unbounded_Sequence_Char _gp_field03_05_seq;
    _gp_field03_05_seq gp_field03_05;

    typedef _CORBA_Unbounded_Sequence_Char _gp_field03_06_seq;
    _gp_field03_06_seq gp_field03_06;

    typedef _CORBA_Unbounded_Sequence_Char _gp_field03_07_seq;
    _gp_field03_07_seq gp_field03_07;

    typedef _CORBA_Unbounded_Sequence_Char _gp_field03_08_seq;
    _gp_field03_08_seq gp_field03_08;

    typedef _CORBA_Unbounded_Sequence_Char _gp_field03_09_seq;
    _gp_field03_09_seq gp_field03_09;

    typedef _CORBA_Unbounded_Sequence_Char _gp_field03_10_seq;
    _gp_field03_10_seq gp_field03_10;

    typedef _CORBA_Unbounded_Sequence_Char _gp_field03_11_seq;
    _gp_field03_11_seq gp_field03_11;

    typedef _CORBA_Unbounded_Sequence_Char _gp_field03_12_seq;
    _gp_field03_12_seq gp_field03_12;

    typedef _CORBA_Unbounded_Sequence_Char _gp_field04_seq;
    _gp_field04_seq gp_field04;

    typedef _CORBA_Unbounded_Sequence_Char _gl_field00_seq;
    _gl_field00_seq gl_field00;

    typedef _CORBA_Unbounded_Sequence_Char _gl_field01_seq;
    _gl_field01_seq gl_field01;

    typedef _CORBA_Unbounded_Sequence_Char _gl_field02_seq;
    _gl_field02_seq gl_field02;

    typedef _CORBA_Unbounded_Sequence_Char _gl_field03_01_seq;
    _gl_field03_01_seq gl_field03_01;

    typedef _CORBA_Unbounded_Sequence_Char _gl_field03_02_seq;
    _gl_field03_02_seq gl_field03_02;

    typedef _CORBA_Unbounded_Sequence_Char _gl_field03_03_seq;
    _gl_field03_03_seq gl_field03_03;

    typedef _CORBA_Unbounded_Sequence_Char _gl_field03_04_seq;
    _gl_field03_04_seq gl_field03_04;

    typedef _CORBA_Unbounded_Sequence_Char _gl_field03_05_seq;
    _gl_field03_05_seq gl_field03_05;

    typedef _CORBA_Unbounded_Sequence_Char _gl_field03_06_seq;
    _gl_field03_06_seq gl_field03_06;

    typedef _CORBA_Unbounded_Sequence_Char _gl_field03_07_seq;
    _gl_field03_07_seq gl_field03_07;

    typedef _CORBA_Unbounded_Sequence_Char _gl_field03_08_seq;
    _gl_field03_08_seq gl_field03_08;

    typedef _CORBA_Unbounded_Sequence_Char _gl_field03_09_seq;
    _gl_field03_09_seq gl_field03_09;

    typedef _CORBA_Unbounded_Sequence_Char _gl_field03_10_seq;
    _gl_field03_10_seq gl_field03_10;

    typedef _CORBA_Unbounded_Sequence_Char _gl_field03_11_seq;
    _gl_field03_11_seq gl_field03_11;

    typedef _CORBA_Unbounded_Sequence_Char _gl_field03_12_seq;
    _gl_field03_12_seq gl_field03_12;

    typedef _CORBA_Unbounded_Sequence_Char _gl_field04_seq;
    _gl_field04_seq gl_field04;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef Grs_message::_var_type Grs_message_var;

  typedef _CORBA_ConstrType_Variable_OUT_arg< Grs_message,Grs_message_var > Grs_message_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Grs_message;

  struct Gsa_message {
    typedef _CORBA_ConstrType_Variable_Var<Gsa_message> _var_type;

    
    typedef _CORBA_Unbounded_Sequence_Char _gp_field00_seq;
    _gp_field00_seq gp_field00;

    typedef _CORBA_Unbounded_Sequence_Char _gp_field01_seq;
    _gp_field01_seq gp_field01;

    typedef _CORBA_Unbounded_Sequence_Char _gp_field02_seq;
    _gp_field02_seq gp_field02;

    typedef _CORBA_Unbounded_Sequence_Char _gp_field03_01_seq;
    _gp_field03_01_seq gp_field03_01;

    typedef _CORBA_Unbounded_Sequence_Char _gp_field03_02_seq;
    _gp_field03_02_seq gp_field03_02;

    typedef _CORBA_Unbounded_Sequence_Char _gp_field03_03_seq;
    _gp_field03_03_seq gp_field03_03;

    typedef _CORBA_Unbounded_Sequence_Char _gp_field03_04_seq;
    _gp_field03_04_seq gp_field03_04;

    typedef _CORBA_Unbounded_Sequence_Char _gp_field03_05_seq;
    _gp_field03_05_seq gp_field03_05;

    typedef _CORBA_Unbounded_Sequence_Char _gp_field03_06_seq;
    _gp_field03_06_seq gp_field03_06;

    typedef _CORBA_Unbounded_Sequence_Char _gp_field03_07_seq;
    _gp_field03_07_seq gp_field03_07;

    typedef _CORBA_Unbounded_Sequence_Char _gp_field03_08_seq;
    _gp_field03_08_seq gp_field03_08;

    typedef _CORBA_Unbounded_Sequence_Char _gp_field03_09_seq;
    _gp_field03_09_seq gp_field03_09;

    typedef _CORBA_Unbounded_Sequence_Char _gp_field03_10_seq;
    _gp_field03_10_seq gp_field03_10;

    typedef _CORBA_Unbounded_Sequence_Char _gp_field03_11_seq;
    _gp_field03_11_seq gp_field03_11;

    typedef _CORBA_Unbounded_Sequence_Char _gp_field03_12_seq;
    _gp_field03_12_seq gp_field03_12;

    typedef _CORBA_Unbounded_Sequence_Char _gp_field04_seq;
    _gp_field04_seq gp_field04;

    typedef _CORBA_Unbounded_Sequence_Char _gp_field05_seq;
    _gp_field05_seq gp_field05;

    typedef _CORBA_Unbounded_Sequence_Char _gp_field06_seq;
    _gp_field06_seq gp_field06;

    typedef _CORBA_Unbounded_Sequence_Char _gp_field07_seq;
    _gp_field07_seq gp_field07;

    typedef _CORBA_Unbounded_Sequence_Char _gl_field00_seq;
    _gl_field00_seq gl_field00;

    typedef _CORBA_Unbounded_Sequence_Char _gl_field01_seq;
    _gl_field01_seq gl_field01;

    typedef _CORBA_Unbounded_Sequence_Char _gl_field02_seq;
    _gl_field02_seq gl_field02;

    typedef _CORBA_Unbounded_Sequence_Char _gl_field03_01_seq;
    _gl_field03_01_seq gl_field03_01;

    typedef _CORBA_Unbounded_Sequence_Char _gl_field03_02_seq;
    _gl_field03_02_seq gl_field03_02;

    typedef _CORBA_Unbounded_Sequence_Char _gl_field03_03_seq;
    _gl_field03_03_seq gl_field03_03;

    typedef _CORBA_Unbounded_Sequence_Char _gl_field03_04_seq;
    _gl_field03_04_seq gl_field03_04;

    typedef _CORBA_Unbounded_Sequence_Char _gl_field03_05_seq;
    _gl_field03_05_seq gl_field03_05;

    typedef _CORBA_Unbounded_Sequence_Char _gl_field03_06_seq;
    _gl_field03_06_seq gl_field03_06;

    typedef _CORBA_Unbounded_Sequence_Char _gl_field03_07_seq;
    _gl_field03_07_seq gl_field03_07;

    typedef _CORBA_Unbounded_Sequence_Char _gl_field03_08_seq;
    _gl_field03_08_seq gl_field03_08;

    typedef _CORBA_Unbounded_Sequence_Char _gl_field03_09_seq;
    _gl_field03_09_seq gl_field03_09;

    typedef _CORBA_Unbounded_Sequence_Char _gl_field03_10_seq;
    _gl_field03_10_seq gl_field03_10;

    typedef _CORBA_Unbounded_Sequence_Char _gl_field03_11_seq;
    _gl_field03_11_seq gl_field03_11;

    typedef _CORBA_Unbounded_Sequence_Char _gl_field03_12_seq;
    _gl_field03_12_seq gl_field03_12;

    typedef _CORBA_Unbounded_Sequence_Char _gl_field04_seq;
    _gl_field04_seq gl_field04;

    typedef _CORBA_Unbounded_Sequence_Char _gl_field05_seq;
    _gl_field05_seq gl_field05;

    typedef _CORBA_Unbounded_Sequence_Char _gl_field06_seq;
    _gl_field06_seq gl_field06;

    typedef _CORBA_Unbounded_Sequence_Char _gl_field07_seq;
    _gl_field07_seq gl_field07;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef Gsa_message::_var_type Gsa_message_var;

  typedef _CORBA_ConstrType_Variable_OUT_arg< Gsa_message,Gsa_message_var > Gsa_message_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Gsa_message;

  struct Gst_message {
    typedef _CORBA_ConstrType_Variable_Var<Gst_message> _var_type;

    
    typedef _CORBA_Unbounded_Sequence_Char _field00_seq;
    _field00_seq field00;

    typedef _CORBA_Unbounded_Sequence_Char _field01_seq;
    _field01_seq field01;

    typedef _CORBA_Unbounded_Sequence_Char _field02_seq;
    _field02_seq field02;

    typedef _CORBA_Unbounded_Sequence_Char _field03_seq;
    _field03_seq field03;

    typedef _CORBA_Unbounded_Sequence_Char _field04_seq;
    _field04_seq field04;

    typedef _CORBA_Unbounded_Sequence_Char _field05_seq;
    _field05_seq field05;

    typedef _CORBA_Unbounded_Sequence_Char _field06_seq;
    _field06_seq field06;

    typedef _CORBA_Unbounded_Sequence_Char _field07_seq;
    _field07_seq field07;

    typedef _CORBA_Unbounded_Sequence_Char _field08_seq;
    _field08_seq field08;

    typedef _CORBA_Unbounded_Sequence_Char _field09_seq;
    _field09_seq field09;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef Gst_message::_var_type Gst_message_var;

  typedef _CORBA_ConstrType_Variable_OUT_arg< Gst_message,Gst_message_var > Gst_message_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Gst_message;

  struct Gsv_message {
    typedef _CORBA_ConstrType_Variable_Var<Gsv_message> _var_type;

    
    typedef _CORBA_Unbounded_Sequence_Char _gp1_field00_seq;
    _gp1_field00_seq gp1_field00;

    typedef _CORBA_Unbounded_Sequence_Char _gp1_field01_seq;
    _gp1_field01_seq gp1_field01;

    typedef _CORBA_Unbounded_Sequence_Char _gp1_field02_seq;
    _gp1_field02_seq gp1_field02;

    typedef _CORBA_Unbounded_Sequence_Char _gp1_field03_seq;
    _gp1_field03_seq gp1_field03;

    typedef _CORBA_Unbounded_Sequence_Char _gp1_field04_1_1_seq;
    _gp1_field04_1_1_seq gp1_field04_1_1;

    typedef _CORBA_Unbounded_Sequence_Char _gp1_field04_1_2_seq;
    _gp1_field04_1_2_seq gp1_field04_1_2;

    typedef _CORBA_Unbounded_Sequence_Char _gp1_field04_1_3_seq;
    _gp1_field04_1_3_seq gp1_field04_1_3;

    typedef _CORBA_Unbounded_Sequence_Char _gp1_field04_1_4_seq;
    _gp1_field04_1_4_seq gp1_field04_1_4;

    typedef _CORBA_Unbounded_Sequence_Char _gp1_field04_2_1_seq;
    _gp1_field04_2_1_seq gp1_field04_2_1;

    typedef _CORBA_Unbounded_Sequence_Char _gp1_field04_2_2_seq;
    _gp1_field04_2_2_seq gp1_field04_2_2;

    typedef _CORBA_Unbounded_Sequence_Char _gp1_field04_2_3_seq;
    _gp1_field04_2_3_seq gp1_field04_2_3;

    typedef _CORBA_Unbounded_Sequence_Char _gp1_field04_2_4_seq;
    _gp1_field04_2_4_seq gp1_field04_2_4;

    typedef _CORBA_Unbounded_Sequence_Char _gp1_field04_3_1_seq;
    _gp1_field04_3_1_seq gp1_field04_3_1;

    typedef _CORBA_Unbounded_Sequence_Char _gp1_field04_3_2_seq;
    _gp1_field04_3_2_seq gp1_field04_3_2;

    typedef _CORBA_Unbounded_Sequence_Char _gp1_field04_3_3_seq;
    _gp1_field04_3_3_seq gp1_field04_3_3;

    typedef _CORBA_Unbounded_Sequence_Char _gp1_field04_3_4_seq;
    _gp1_field04_3_4_seq gp1_field04_3_4;

    typedef _CORBA_Unbounded_Sequence_Char _gp1_field04_4_1_seq;
    _gp1_field04_4_1_seq gp1_field04_4_1;

    typedef _CORBA_Unbounded_Sequence_Char _gp1_field04_4_2_seq;
    _gp1_field04_4_2_seq gp1_field04_4_2;

    typedef _CORBA_Unbounded_Sequence_Char _gp1_field04_4_3_seq;
    _gp1_field04_4_3_seq gp1_field04_4_3;

    typedef _CORBA_Unbounded_Sequence_Char _gp1_field04_4_4_seq;
    _gp1_field04_4_4_seq gp1_field04_4_4;

    typedef _CORBA_Unbounded_Sequence_Char _gp1_field05_seq;
    _gp1_field05_seq gp1_field05;

    typedef _CORBA_Unbounded_Sequence_Char _gp2_field00_seq;
    _gp2_field00_seq gp2_field00;

    typedef _CORBA_Unbounded_Sequence_Char _gp2_field01_seq;
    _gp2_field01_seq gp2_field01;

    typedef _CORBA_Unbounded_Sequence_Char _gp2_field02_seq;
    _gp2_field02_seq gp2_field02;

    typedef _CORBA_Unbounded_Sequence_Char _gp2_field03_seq;
    _gp2_field03_seq gp2_field03;

    typedef _CORBA_Unbounded_Sequence_Char _gp2_field04_1_1_seq;
    _gp2_field04_1_1_seq gp2_field04_1_1;

    typedef _CORBA_Unbounded_Sequence_Char _gp2_field04_1_2_seq;
    _gp2_field04_1_2_seq gp2_field04_1_2;

    typedef _CORBA_Unbounded_Sequence_Char _gp2_field04_1_3_seq;
    _gp2_field04_1_3_seq gp2_field04_1_3;

    typedef _CORBA_Unbounded_Sequence_Char _gp2_field04_1_4_seq;
    _gp2_field04_1_4_seq gp2_field04_1_4;

    typedef _CORBA_Unbounded_Sequence_Char _gp2_field04_2_1_seq;
    _gp2_field04_2_1_seq gp2_field04_2_1;

    typedef _CORBA_Unbounded_Sequence_Char _gp2_field04_2_2_seq;
    _gp2_field04_2_2_seq gp2_field04_2_2;

    typedef _CORBA_Unbounded_Sequence_Char _gp2_field04_2_3_seq;
    _gp2_field04_2_3_seq gp2_field04_2_3;

    typedef _CORBA_Unbounded_Sequence_Char _gp2_field04_2_4_seq;
    _gp2_field04_2_4_seq gp2_field04_2_4;

    typedef _CORBA_Unbounded_Sequence_Char _gp2_field04_3_1_seq;
    _gp2_field04_3_1_seq gp2_field04_3_1;

    typedef _CORBA_Unbounded_Sequence_Char _gp2_field04_3_2_seq;
    _gp2_field04_3_2_seq gp2_field04_3_2;

    typedef _CORBA_Unbounded_Sequence_Char _gp2_field04_3_3_seq;
    _gp2_field04_3_3_seq gp2_field04_3_3;

    typedef _CORBA_Unbounded_Sequence_Char _gp2_field04_3_4_seq;
    _gp2_field04_3_4_seq gp2_field04_3_4;

    typedef _CORBA_Unbounded_Sequence_Char _gp2_field04_4_1_seq;
    _gp2_field04_4_1_seq gp2_field04_4_1;

    typedef _CORBA_Unbounded_Sequence_Char _gp2_field04_4_2_seq;
    _gp2_field04_4_2_seq gp2_field04_4_2;

    typedef _CORBA_Unbounded_Sequence_Char _gp2_field04_4_3_seq;
    _gp2_field04_4_3_seq gp2_field04_4_3;

    typedef _CORBA_Unbounded_Sequence_Char _gp2_field04_4_4_seq;
    _gp2_field04_4_4_seq gp2_field04_4_4;

    typedef _CORBA_Unbounded_Sequence_Char _gp2_field05_seq;
    _gp2_field05_seq gp2_field05;

    typedef _CORBA_Unbounded_Sequence_Char _gp3_field00_seq;
    _gp3_field00_seq gp3_field00;

    typedef _CORBA_Unbounded_Sequence_Char _gp3_field01_seq;
    _gp3_field01_seq gp3_field01;

    typedef _CORBA_Unbounded_Sequence_Char _gp3_field02_seq;
    _gp3_field02_seq gp3_field02;

    typedef _CORBA_Unbounded_Sequence_Char _gp3_field03_seq;
    _gp3_field03_seq gp3_field03;

    typedef _CORBA_Unbounded_Sequence_Char _gp3_field04_1_1_seq;
    _gp3_field04_1_1_seq gp3_field04_1_1;

    typedef _CORBA_Unbounded_Sequence_Char _gp3_field04_1_2_seq;
    _gp3_field04_1_2_seq gp3_field04_1_2;

    typedef _CORBA_Unbounded_Sequence_Char _gp3_field04_1_3_seq;
    _gp3_field04_1_3_seq gp3_field04_1_3;

    typedef _CORBA_Unbounded_Sequence_Char _gp3_field04_1_4_seq;
    _gp3_field04_1_4_seq gp3_field04_1_4;

    typedef _CORBA_Unbounded_Sequence_Char _gp3_field04_2_1_seq;
    _gp3_field04_2_1_seq gp3_field04_2_1;

    typedef _CORBA_Unbounded_Sequence_Char _gp3_field04_2_2_seq;
    _gp3_field04_2_2_seq gp3_field04_2_2;

    typedef _CORBA_Unbounded_Sequence_Char _gp3_field04_2_3_seq;
    _gp3_field04_2_3_seq gp3_field04_2_3;

    typedef _CORBA_Unbounded_Sequence_Char _gp3_field04_2_4_seq;
    _gp3_field04_2_4_seq gp3_field04_2_4;

    typedef _CORBA_Unbounded_Sequence_Char _gp3_field04_3_1_seq;
    _gp3_field04_3_1_seq gp3_field04_3_1;

    typedef _CORBA_Unbounded_Sequence_Char _gp3_field04_3_2_seq;
    _gp3_field04_3_2_seq gp3_field04_3_2;

    typedef _CORBA_Unbounded_Sequence_Char _gp3_field04_3_3_seq;
    _gp3_field04_3_3_seq gp3_field04_3_3;

    typedef _CORBA_Unbounded_Sequence_Char _gp3_field04_3_4_seq;
    _gp3_field04_3_4_seq gp3_field04_3_4;

    typedef _CORBA_Unbounded_Sequence_Char _gp3_field04_4_1_seq;
    _gp3_field04_4_1_seq gp3_field04_4_1;

    typedef _CORBA_Unbounded_Sequence_Char _gp3_field04_4_2_seq;
    _gp3_field04_4_2_seq gp3_field04_4_2;

    typedef _CORBA_Unbounded_Sequence_Char _gp3_field04_4_3_seq;
    _gp3_field04_4_3_seq gp3_field04_4_3;

    typedef _CORBA_Unbounded_Sequence_Char _gp3_field04_4_4_seq;
    _gp3_field04_4_4_seq gp3_field04_4_4;

    typedef _CORBA_Unbounded_Sequence_Char _gp3_field05_seq;
    _gp3_field05_seq gp3_field05;

    typedef _CORBA_Unbounded_Sequence_Char _gl1_field00_seq;
    _gl1_field00_seq gl1_field00;

    typedef _CORBA_Unbounded_Sequence_Char _gl1_field01_seq;
    _gl1_field01_seq gl1_field01;

    typedef _CORBA_Unbounded_Sequence_Char _gl1_field02_seq;
    _gl1_field02_seq gl1_field02;

    typedef _CORBA_Unbounded_Sequence_Char _gl1_field03_seq;
    _gl1_field03_seq gl1_field03;

    typedef _CORBA_Unbounded_Sequence_Char _gl1_field04_1_1_seq;
    _gl1_field04_1_1_seq gl1_field04_1_1;

    typedef _CORBA_Unbounded_Sequence_Char _gl1_field04_1_2_seq;
    _gl1_field04_1_2_seq gl1_field04_1_2;

    typedef _CORBA_Unbounded_Sequence_Char _gl1_field04_1_3_seq;
    _gl1_field04_1_3_seq gl1_field04_1_3;

    typedef _CORBA_Unbounded_Sequence_Char _gl1_field04_1_4_seq;
    _gl1_field04_1_4_seq gl1_field04_1_4;

    typedef _CORBA_Unbounded_Sequence_Char _gl1_field04_2_1_seq;
    _gl1_field04_2_1_seq gl1_field04_2_1;

    typedef _CORBA_Unbounded_Sequence_Char _gl1_field04_2_2_seq;
    _gl1_field04_2_2_seq gl1_field04_2_2;

    typedef _CORBA_Unbounded_Sequence_Char _gl1_field04_2_3_seq;
    _gl1_field04_2_3_seq gl1_field04_2_3;

    typedef _CORBA_Unbounded_Sequence_Char _gl1_field04_2_4_seq;
    _gl1_field04_2_4_seq gl1_field04_2_4;

    typedef _CORBA_Unbounded_Sequence_Char _gl1_field04_3_1_seq;
    _gl1_field04_3_1_seq gl1_field04_3_1;

    typedef _CORBA_Unbounded_Sequence_Char _gl1_field04_3_2_seq;
    _gl1_field04_3_2_seq gl1_field04_3_2;

    typedef _CORBA_Unbounded_Sequence_Char _gl1_field04_3_3_seq;
    _gl1_field04_3_3_seq gl1_field04_3_3;

    typedef _CORBA_Unbounded_Sequence_Char _gl1_field04_3_4_seq;
    _gl1_field04_3_4_seq gl1_field04_3_4;

    typedef _CORBA_Unbounded_Sequence_Char _gl1_field04_4_1_seq;
    _gl1_field04_4_1_seq gl1_field04_4_1;

    typedef _CORBA_Unbounded_Sequence_Char _gl1_field04_4_2_seq;
    _gl1_field04_4_2_seq gl1_field04_4_2;

    typedef _CORBA_Unbounded_Sequence_Char _gl1_field04_4_3_seq;
    _gl1_field04_4_3_seq gl1_field04_4_3;

    typedef _CORBA_Unbounded_Sequence_Char _gl1_field04_4_4_seq;
    _gl1_field04_4_4_seq gl1_field04_4_4;

    typedef _CORBA_Unbounded_Sequence_Char _gl1_field05_seq;
    _gl1_field05_seq gl1_field05;

    typedef _CORBA_Unbounded_Sequence_Char _gl2_field00_seq;
    _gl2_field00_seq gl2_field00;

    typedef _CORBA_Unbounded_Sequence_Char _gl2_field01_seq;
    _gl2_field01_seq gl2_field01;

    typedef _CORBA_Unbounded_Sequence_Char _gl2_field02_seq;
    _gl2_field02_seq gl2_field02;

    typedef _CORBA_Unbounded_Sequence_Char _gl2_field03_seq;
    _gl2_field03_seq gl2_field03;

    typedef _CORBA_Unbounded_Sequence_Char _gl2_field04_1_1_seq;
    _gl2_field04_1_1_seq gl2_field04_1_1;

    typedef _CORBA_Unbounded_Sequence_Char _gl2_field04_1_2_seq;
    _gl2_field04_1_2_seq gl2_field04_1_2;

    typedef _CORBA_Unbounded_Sequence_Char _gl2_field04_1_3_seq;
    _gl2_field04_1_3_seq gl2_field04_1_3;

    typedef _CORBA_Unbounded_Sequence_Char _gl2_field04_1_4_seq;
    _gl2_field04_1_4_seq gl2_field04_1_4;

    typedef _CORBA_Unbounded_Sequence_Char _gl2_field04_2_1_seq;
    _gl2_field04_2_1_seq gl2_field04_2_1;

    typedef _CORBA_Unbounded_Sequence_Char _gl2_field04_2_2_seq;
    _gl2_field04_2_2_seq gl2_field04_2_2;

    typedef _CORBA_Unbounded_Sequence_Char _gl2_field04_2_3_seq;
    _gl2_field04_2_3_seq gl2_field04_2_3;

    typedef _CORBA_Unbounded_Sequence_Char _gl2_field04_2_4_seq;
    _gl2_field04_2_4_seq gl2_field04_2_4;

    typedef _CORBA_Unbounded_Sequence_Char _gl2_field04_3_1_seq;
    _gl2_field04_3_1_seq gl2_field04_3_1;

    typedef _CORBA_Unbounded_Sequence_Char _gl2_field04_3_2_seq;
    _gl2_field04_3_2_seq gl2_field04_3_2;

    typedef _CORBA_Unbounded_Sequence_Char _gl2_field04_3_3_seq;
    _gl2_field04_3_3_seq gl2_field04_3_3;

    typedef _CORBA_Unbounded_Sequence_Char _gl2_field04_3_4_seq;
    _gl2_field04_3_4_seq gl2_field04_3_4;

    typedef _CORBA_Unbounded_Sequence_Char _gl2_field04_4_1_seq;
    _gl2_field04_4_1_seq gl2_field04_4_1;

    typedef _CORBA_Unbounded_Sequence_Char _gl2_field04_4_2_seq;
    _gl2_field04_4_2_seq gl2_field04_4_2;

    typedef _CORBA_Unbounded_Sequence_Char _gl2_field04_4_3_seq;
    _gl2_field04_4_3_seq gl2_field04_4_3;

    typedef _CORBA_Unbounded_Sequence_Char _gl2_field04_4_4_seq;
    _gl2_field04_4_4_seq gl2_field04_4_4;

    typedef _CORBA_Unbounded_Sequence_Char _gl2_field05_seq;
    _gl2_field05_seq gl2_field05;

    typedef _CORBA_Unbounded_Sequence_Char _gl3_field00_seq;
    _gl3_field00_seq gl3_field00;

    typedef _CORBA_Unbounded_Sequence_Char _gl3_field01_seq;
    _gl3_field01_seq gl3_field01;

    typedef _CORBA_Unbounded_Sequence_Char _gl3_field02_seq;
    _gl3_field02_seq gl3_field02;

    typedef _CORBA_Unbounded_Sequence_Char _gl3_field03_seq;
    _gl3_field03_seq gl3_field03;

    typedef _CORBA_Unbounded_Sequence_Char _gl3_field04_1_1_seq;
    _gl3_field04_1_1_seq gl3_field04_1_1;

    typedef _CORBA_Unbounded_Sequence_Char _gl3_field04_1_2_seq;
    _gl3_field04_1_2_seq gl3_field04_1_2;

    typedef _CORBA_Unbounded_Sequence_Char _gl3_field04_1_3_seq;
    _gl3_field04_1_3_seq gl3_field04_1_3;

    typedef _CORBA_Unbounded_Sequence_Char _gl3_field04_1_4_seq;
    _gl3_field04_1_4_seq gl3_field04_1_4;

    typedef _CORBA_Unbounded_Sequence_Char _gl3_field04_2_1_seq;
    _gl3_field04_2_1_seq gl3_field04_2_1;

    typedef _CORBA_Unbounded_Sequence_Char _gl3_field04_2_2_seq;
    _gl3_field04_2_2_seq gl3_field04_2_2;

    typedef _CORBA_Unbounded_Sequence_Char _gl3_field04_2_3_seq;
    _gl3_field04_2_3_seq gl3_field04_2_3;

    typedef _CORBA_Unbounded_Sequence_Char _gl3_field04_2_4_seq;
    _gl3_field04_2_4_seq gl3_field04_2_4;

    typedef _CORBA_Unbounded_Sequence_Char _gl3_field04_3_1_seq;
    _gl3_field04_3_1_seq gl3_field04_3_1;

    typedef _CORBA_Unbounded_Sequence_Char _gl3_field04_3_2_seq;
    _gl3_field04_3_2_seq gl3_field04_3_2;

    typedef _CORBA_Unbounded_Sequence_Char _gl3_field04_3_3_seq;
    _gl3_field04_3_3_seq gl3_field04_3_3;

    typedef _CORBA_Unbounded_Sequence_Char _gl3_field04_3_4_seq;
    _gl3_field04_3_4_seq gl3_field04_3_4;

    typedef _CORBA_Unbounded_Sequence_Char _gl3_field04_4_1_seq;
    _gl3_field04_4_1_seq gl3_field04_4_1;

    typedef _CORBA_Unbounded_Sequence_Char _gl3_field04_4_2_seq;
    _gl3_field04_4_2_seq gl3_field04_4_2;

    typedef _CORBA_Unbounded_Sequence_Char _gl3_field04_4_3_seq;
    _gl3_field04_4_3_seq gl3_field04_4_3;

    typedef _CORBA_Unbounded_Sequence_Char _gl3_field04_4_4_seq;
    _gl3_field04_4_4_seq gl3_field04_4_4;

    typedef _CORBA_Unbounded_Sequence_Char _gl3_field05_seq;
    _gl3_field05_seq gl3_field05;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef Gsv_message::_var_type Gsv_message_var;

  typedef _CORBA_ConstrType_Variable_OUT_arg< Gsv_message,Gsv_message_var > Gsv_message_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Gsv_message;

  struct Hdt_message {
    typedef _CORBA_ConstrType_Variable_Var<Hdt_message> _var_type;

    
    typedef _CORBA_Unbounded_Sequence_Char _field00_seq;
    _field00_seq field00;

    typedef _CORBA_Unbounded_Sequence_Char _field01_seq;
    _field01_seq field01;

    typedef _CORBA_Unbounded_Sequence_Char _field02_seq;
    _field02_seq field02;

    typedef _CORBA_Unbounded_Sequence_Char _field03_seq;
    _field03_seq field03;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef Hdt_message::_var_type Hdt_message_var;

  typedef _CORBA_ConstrType_Variable_OUT_arg< Hdt_message,Hdt_message_var > Hdt_message_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Hdt_message;

  struct Rmc_message {
    typedef _CORBA_ConstrType_Variable_Var<Rmc_message> _var_type;

    
    typedef _CORBA_Unbounded_Sequence_Char _field00_seq;
    _field00_seq field00;

    typedef _CORBA_Unbounded_Sequence_Char _field01_seq;
    _field01_seq field01;

    typedef _CORBA_Unbounded_Sequence_Char _field02_seq;
    _field02_seq field02;

    typedef _CORBA_Unbounded_Sequence_Char _field03_seq;
    _field03_seq field03;

    typedef _CORBA_Unbounded_Sequence_Char _field04_seq;
    _field04_seq field04;

    typedef _CORBA_Unbounded_Sequence_Char _field05_seq;
    _field05_seq field05;

    typedef _CORBA_Unbounded_Sequence_Char _field06_seq;
    _field06_seq field06;

    typedef _CORBA_Unbounded_Sequence_Char _field07_seq;
    _field07_seq field07;

    typedef _CORBA_Unbounded_Sequence_Char _field08_seq;
    _field08_seq field08;

    typedef _CORBA_Unbounded_Sequence_Char _field09_seq;
    _field09_seq field09;

    typedef _CORBA_Unbounded_Sequence_Char _field10_seq;
    _field10_seq field10;

    typedef _CORBA_Unbounded_Sequence_Char _field11_seq;
    _field11_seq field11;

    typedef _CORBA_Unbounded_Sequence_Char _field12_seq;
    _field12_seq field12;

    typedef _CORBA_Unbounded_Sequence_Char _field13_seq;
    _field13_seq field13;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef Rmc_message::_var_type Rmc_message_var;

  typedef _CORBA_ConstrType_Variable_OUT_arg< Rmc_message,Rmc_message_var > Rmc_message_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Rmc_message;

  struct Vtg_message {
    typedef _CORBA_ConstrType_Variable_Var<Vtg_message> _var_type;

    
    typedef _CORBA_Unbounded_Sequence_Char _field00_seq;
    _field00_seq field00;

    typedef _CORBA_Unbounded_Sequence_Char _field01_seq;
    _field01_seq field01;

    typedef _CORBA_Unbounded_Sequence_Char _field02_seq;
    _field02_seq field02;

    typedef _CORBA_Unbounded_Sequence_Char _field03_seq;
    _field03_seq field03;

    typedef _CORBA_Unbounded_Sequence_Char _field04_seq;
    _field04_seq field04;

    typedef _CORBA_Unbounded_Sequence_Char _field05_seq;
    _field05_seq field05;

    typedef _CORBA_Unbounded_Sequence_Char _field06_seq;
    _field06_seq field06;

    typedef _CORBA_Unbounded_Sequence_Char _field07_seq;
    _field07_seq field07;

    typedef _CORBA_Unbounded_Sequence_Char _field08_seq;
    _field08_seq field08;

    typedef _CORBA_Unbounded_Sequence_Char _field09_seq;
    _field09_seq field09;

    typedef _CORBA_Unbounded_Sequence_Char _field10_seq;
    _field10_seq field10;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef Vtg_message::_var_type Vtg_message_var;

  typedef _CORBA_ConstrType_Variable_OUT_arg< Vtg_message,Vtg_message_var > Vtg_message_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Vtg_message;

  struct Zda_message {
    typedef _CORBA_ConstrType_Variable_Var<Zda_message> _var_type;

    
    typedef _CORBA_Unbounded_Sequence_Char _field00_seq;
    _field00_seq field00;

    typedef _CORBA_Unbounded_Sequence_Char _field01_seq;
    _field01_seq field01;

    typedef _CORBA_Unbounded_Sequence_Char _field02_seq;
    _field02_seq field02;

    typedef _CORBA_Unbounded_Sequence_Char _field03_seq;
    _field03_seq field03;

    typedef _CORBA_Unbounded_Sequence_Char _field04_seq;
    _field04_seq field04;

    typedef _CORBA_Unbounded_Sequence_Char _field05_seq;
    _field05_seq field05;

    typedef _CORBA_Unbounded_Sequence_Char _field06_seq;
    _field06_seq field06;

    typedef _CORBA_Unbounded_Sequence_Char _field07_seq;
    _field07_seq field07;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef Zda_message::_var_type Zda_message_var;

  typedef _CORBA_ConstrType_Variable_OUT_arg< Zda_message,Zda_message_var > Zda_message_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Zda_message;

  struct TimedLegacyData {
    typedef _CORBA_ConstrType_Variable_Var<TimedLegacyData> _var_type;

    
    Time tm;

    ::CORBA::UShort mode;

    Gga_message gga;

    Gll_message gll;

    Gns_message gns;

    Grs_message grs;

    Gsa_message gsa;

    Gst_message gst;

    Gsv_message gsv;

    Hdt_message hdt;

    Rmc_message rmc;

    Vtg_message vtg;

    Zda_message zda;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedLegacyData::_var_type TimedLegacyData_var;

  typedef _CORBA_ConstrType_Variable_OUT_arg< TimedLegacyData,TimedLegacyData_var > TimedLegacyData_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedLegacyData;

  struct TimedJgd2000Position {
    typedef _CORBA_ConstrType_Fix_Var<TimedJgd2000Position> _var_type;

    
    Time tm;

    ::CORBA::Double latitude;

    ::CORBA::Double longitude;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedJgd2000Position::_var_type TimedJgd2000Position_var;

  typedef TimedJgd2000Position& TimedJgd2000Position_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedJgd2000Position;

  struct TimedGpsData {
    typedef _CORBA_ConstrType_Fix_Var<TimedGpsData> _var_type;

    
    Time tm;

    TimedJgd2000Position Jgd2000Position;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedGpsData::_var_type TimedGpsData_var;

  typedef TimedGpsData& TimedGpsData_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedGpsData;

  struct Timed19Position {
    typedef _CORBA_ConstrType_Fix_Var<Timed19Position> _var_type;

    
    Time tm;

    ::CORBA::Double x;

    ::CORBA::Double y;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef Timed19Position::_var_type Timed19Position_var;

  typedef Timed19Position& Timed19Position_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Timed19Position;

  struct TimedRobotPosition {
    typedef _CORBA_ConstrType_Fix_Var<TimedRobotPosition> _var_type;

    
    Time tm;

    ::CORBA::Double x;

    ::CORBA::Double y;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedRobotPosition::_var_type TimedRobotPosition_var;

  typedef TimedRobotPosition& TimedRobotPosition_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedRobotPosition;

  struct TimedMapData {
    typedef _CORBA_ConstrType_Variable_Var<TimedMapData> _var_type;

    
    Time tm;

    ::CORBA::UShort mode;

    typedef _CORBA_Unbounded_Sequence_Char _location_seq;
    _location_seq location;

    typedef _CORBA_Unbounded_Sequence_Char _mapset_seq;
    _mapset_seq mapset;

    typedef _CORBA_Unbounded_Sequence_Char _type_seq;
    _type_seq type;

    ::CORBA::Long origin_x;

    ::CORBA::Long origin_y;

    ::CORBA::ULong size_x;

    ::CORBA::ULong size_y;

    typedef _CORBA_Unbounded_Sequence_Char _explanation_seq;
    _explanation_seq explanation;

    ::CORBA::Long map_origin_x;

    ::CORBA::Long map_origin_y;

    ::CORBA::ULong map_size_x;

    ::CORBA::ULong map_size_y;

    ::CORBA::ULong pixel_size_x;

    ::CORBA::ULong pixel_size_y;

    typedef _CORBA_Unbounded_Sequence_Char _category_seq;
    _category_seq category;

    typedef _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::ULong, 4, 4 >  _mapdata_seq;
    _mapdata_seq mapdata;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedMapData::_var_type TimedMapData_var;

  typedef _CORBA_ConstrType_Variable_OUT_arg< TimedMapData,TimedMapData_var > TimedMapData_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedMapData;

  struct Arc {
    typedef _CORBA_ConstrType_Fix_Var<Arc> _var_type;

    
    ::CORBA::ULong start_id;

    ::CORBA::ULong end_id;

    ::CORBA::Double cost;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef Arc::_var_type Arc_var;

  typedef Arc& Arc_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Arc;

  struct Node {
    typedef _CORBA_ConstrType_Variable_Var<Node> _var_type;

    
    ::CORBA::ULong id;

    ::CORBA::Double x;

    ::CORBA::Double y;

    ::CORBA::Double theta;

    typedef _CORBA_Unbounded_Sequence_Char _explanation_seq;
    _explanation_seq explanation;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef Node::_var_type Node_var;

  typedef _CORBA_ConstrType_Variable_OUT_arg< Node,Node_var > Node_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Node;

  struct TimedArcNode {
    typedef _CORBA_ConstrType_Variable_Var<TimedArcNode> _var_type;

    
    Time tm;

    typedef _CORBA_Unbounded_Sequence< Arc >  _arc_data_seq;
    _arc_data_seq arc_data;

    typedef _CORBA_Unbounded_Sequence< Node >  _node_data_seq;
    _node_data_seq node_data;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedArcNode::_var_type TimedArcNode_var;

  typedef _CORBA_ConstrType_Variable_OUT_arg< TimedArcNode,TimedArcNode_var > TimedArcNode_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedArcNode;

  struct Line {
    typedef _CORBA_ConstrType_Fix_Var<Line> _var_type;

    
    ::CORBA::Double x;

    ::CORBA::Double y;

    ::CORBA::Double theta;

    ::CORBA::Double r;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef Line::_var_type Line_var;

  typedef Line& Line_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Line;

  struct Circle {
    typedef _CORBA_ConstrType_Fix_Var<Circle> _var_type;

    
    ::CORBA::Double x;

    ::CORBA::Double y;

    ::CORBA::Double r;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef Circle::_var_type Circle_var;

  typedef Circle& Circle_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Circle;

  struct TimedLandmark {
    typedef _CORBA_ConstrType_Variable_Var<TimedLandmark> _var_type;

    
    Time tm;

    typedef _CORBA_Unbounded_Sequence< Line >  _line_data_seq;
    _line_data_seq line_data;

    typedef _CORBA_Unbounded_Sequence< Circle >  _circle_data_seq;
    _circle_data_seq circle_data;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedLandmark::_var_type TimedLandmark_var;

  typedef _CORBA_ConstrType_Variable_OUT_arg< TimedLandmark,TimedLandmark_var > TimedLandmark_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedLandmark;

  struct TimedMapOrder {
    typedef _CORBA_ConstrType_Variable_Var<TimedMapOrder> _var_type;

    
    Time tm;

    ::CORBA::UShort trigger;

    ::CORBA::UShort mode;

    typedef _CORBA_Unbounded_Sequence_Char _location_seq;
    _location_seq location;

    typedef _CORBA_Unbounded_Sequence_Char _mapset_seq;
    _mapset_seq mapset;

    typedef _CORBA_Unbounded_Sequence_Char _type_seq;
    _type_seq type;

    ::CORBA::Long origin_x;

    ::CORBA::Long origin_y;

    ::CORBA::ULong size_x;

    ::CORBA::ULong size_y;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedMapOrder::_var_type TimedMapOrder_var;

  typedef _CORBA_ConstrType_Variable_OUT_arg< TimedMapOrder,TimedMapOrder_var > TimedMapOrder_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedMapOrder;

  struct RobotPosition {
    typedef _CORBA_ConstrType_Fix_Var<RobotPosition> _var_type;

    
    ::CORBA::Double x;

    ::CORBA::Double y;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef RobotPosition::_var_type RobotPosition_var;

  typedef RobotPosition& RobotPosition_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_RobotPosition;

  struct TimedPath {
    typedef _CORBA_ConstrType_Variable_Var<TimedPath> _var_type;

    
    Time tm;

    typedef _CORBA_Unbounded_Sequence< RobotPosition >  _path_data_seq;
    _path_data_seq path_data;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedPath::_var_type TimedPath_var;

  typedef _CORBA_ConstrType_Variable_OUT_arg< TimedPath,TimedPath_var > TimedPath_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedPath;

  struct TimedMeshOrder {
    typedef _CORBA_ConstrType_Variable_Var<TimedMeshOrder> _var_type;

    
    Time tm;

    ::CORBA::UShort trigger;

    ::CORBA::UShort mode;

    typedef _CORBA_Unbounded_Sequence_Char _location_seq;
    _location_seq location;

    typedef _CORBA_Unbounded_Sequence_Char _mapset_seq;
    _mapset_seq mapset;

    typedef _CORBA_Unbounded_Sequence_Char _type_seq;
    _type_seq type;

    ::CORBA::Long origin_x;

    ::CORBA::Long origin_y;

    ::CORBA::ULong size_x;

    ::CORBA::ULong size_y;

    ::CORBA::ULong pixel_size_x;

    ::CORBA::ULong pixel_size_y;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedMeshOrder::_var_type TimedMeshOrder_var;

  typedef _CORBA_ConstrType_Variable_OUT_arg< TimedMeshOrder,TimedMeshOrder_var > TimedMeshOrder_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedMeshOrder;

_CORBA_MODULE_END

_CORBA_MODULE IIS

_CORBA_MODULE_BEG

  struct TanakaTest {
    typedef _CORBA_ConstrType_Variable_Var<TanakaTest> _var_type;

    
    RTC::Time tm;

    typedef _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Long, 4, 4 >  _id_seq;
    _id_seq id;

    RTC::Pose2D data;

    typedef _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Double, 8, 8 >  _error_seq;
    _error_seq error;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TanakaTest::_var_type TanakaTest_var;

  typedef _CORBA_ConstrType_Variable_OUT_arg< TanakaTest,TanakaTest_var > TanakaTest_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TanakaTest;

  struct TimedVelocity {
    typedef _CORBA_ConstrType_Variable_Var<TimedVelocity> _var_type;

    
    RTC::Time tm;

    typedef _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Long, 4, 4 >  _id_seq;
    _id_seq id;

    ::CORBA::Double vx;

    ::CORBA::Double vy;

    ::CORBA::Double w;

    typedef _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Double, 8, 8 >  _error_seq;
    _error_seq error;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedVelocity::_var_type TimedVelocity_var;

  typedef _CORBA_ConstrType_Variable_OUT_arg< TimedVelocity,TimedVelocity_var > TimedVelocity_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedVelocity;

  struct TimedPosition {
    typedef _CORBA_ConstrType_Variable_Var<TimedPosition> _var_type;

    
    RTC::Time tm;

    typedef _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Long, 4, 4 >  _id_seq;
    _id_seq id;

    ::CORBA::Double x;

    ::CORBA::Double y;

    ::CORBA::Double theta;

    typedef _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Double, 8, 8 >  _error_seq;
    _error_seq error;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedPosition::_var_type TimedPosition_var;

  typedef _CORBA_ConstrType_Variable_OUT_arg< TimedPosition,TimedPosition_var > TimedPosition_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedPosition;

  struct TimedPose2D {
    typedef _CORBA_ConstrType_Variable_Var<TimedPose2D> _var_type;

    
    RTC::Time tm;

    typedef _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Long, 4, 4 >  _id_seq;
    _id_seq id;

    RTC::Pose2D data;

    typedef _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Double, 8, 8 >  _error_seq;
    _error_seq error;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedPose2D::_var_type TimedPose2D_var;

  typedef _CORBA_ConstrType_Variable_OUT_arg< TimedPose2D,TimedPose2D_var > TimedPose2D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedPose2D;

  struct TimedPose2DSeq {
    typedef _CORBA_ConstrType_Variable_Var<TimedPose2DSeq> _var_type;

    
    RTC::Time tm;

    typedef _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Long, 4, 4 >  _id_seq;
    _id_seq id;

    typedef _CORBA_Unbounded_Sequence< RTC::Pose2D >  _data_seq;
    _data_seq data;

    typedef _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Double, 8, 8 >  _error_seq;
    _error_seq error;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedPose2DSeq::_var_type TimedPose2DSeq_var;

  typedef _CORBA_ConstrType_Variable_OUT_arg< TimedPose2DSeq,TimedPose2DSeq_var > TimedPose2DSeq_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedPose2DSeq;

  struct TimedPath2DSeq {
    typedef _CORBA_ConstrType_Variable_Var<TimedPath2DSeq> _var_type;

    
    RTC::Time tm;

    typedef _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Long, 4, 4 >  _id_seq;
    _id_seq id;

    typedef _CORBA_Unbounded_Sequence< RTC::Pose2D >  _pose_seq;
    _pose_seq pose;

    typedef _CORBA_Unbounded_Sequence< RTC::Velocity2D >  _velocity_seq;
    _velocity_seq velocity;

    typedef _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Double, 8, 8 >  _error_seq;
    _error_seq error;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedPath2DSeq::_var_type TimedPath2DSeq_var;

  typedef _CORBA_ConstrType_Variable_OUT_arg< TimedPath2DSeq,TimedPath2DSeq_var > TimedPath2DSeq_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedPath2DSeq;

  struct TimedVelocity2D {
    typedef _CORBA_ConstrType_Variable_Var<TimedVelocity2D> _var_type;

    
    RTC::Time tm;

    typedef _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Long, 4, 4 >  _id_seq;
    _id_seq id;

    RTC::Velocity2D data;

    typedef _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Double, 8, 8 >  _error_seq;
    _error_seq error;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedVelocity2D::_var_type TimedVelocity2D_var;

  typedef _CORBA_ConstrType_Variable_OUT_arg< TimedVelocity2D,TimedVelocity2D_var > TimedVelocity2D_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedVelocity2D;

  struct TimedState {
    typedef _CORBA_ConstrType_Fix_Var<TimedState> _var_type;

    
    RTC::Time tm;

    ::CORBA::Long id;

    ::CORBA::Boolean isStop;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TimedState::_var_type TimedState_var;

  typedef TimedState& TimedState_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TimedState;

_CORBA_MODULE_END



_CORBA_MODULE POA_RTC
_CORBA_MODULE_BEG

_CORBA_MODULE_END

_CORBA_MODULE POA_IIS
_CORBA_MODULE_BEG

_CORBA_MODULE_END



_CORBA_MODULE OBV_RTC
_CORBA_MODULE_BEG

_CORBA_MODULE_END

_CORBA_MODULE OBV_IIS
_CORBA_MODULE_BEG

_CORBA_MODULE_END





#undef _core_attr
#undef _dyn_attr

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedVelocity& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedVelocity* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedVelocity*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedVelocity*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedOdometry& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedOdometry* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedOdometry*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedOdometry*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedScan& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedScan* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedScan*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedScan*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::Path& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::Path* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::Path*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::Path*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::PathSeq& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::PathSeq* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::PathSeq*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::PathSeq*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedObstacle& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedObstacle* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedObstacle*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedObstacle*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedMovingObstacle& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedMovingObstacle* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedMovingObstacle*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedMovingObstacle*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedObstacles& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedObstacles* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedObstacles*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedObstacles*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedMovingObstacles& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedMovingObstacles* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedMovingObstacles*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedMovingObstacles*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedParticle& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedParticle* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedParticle*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedParticle*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedParticles& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedParticles* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedParticles*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedParticles*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedFormationMember& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedFormationMember* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedFormationMember*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedFormationMember*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedFormationReference& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedFormationReference* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedFormationReference*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedFormationReference*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedRobotData& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedRobotData* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedRobotData*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedRobotData*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::FormationReferenceSeq& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::FormationReferenceSeq* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::FormationReferenceSeq*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::FormationReferenceSeq*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::FormationMemberSeq& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::FormationMemberSeq* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::FormationMemberSeq*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::FormationMemberSeq*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::RobotDataSeq& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::RobotDataSeq* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::RobotDataSeq*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::RobotDataSeq*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::Gga_message& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::Gga_message* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::Gga_message*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::Gga_message*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::Gll_message& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::Gll_message* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::Gll_message*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::Gll_message*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::Gns_message& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::Gns_message* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::Gns_message*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::Gns_message*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::Grs_message& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::Grs_message* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::Grs_message*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::Grs_message*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::Gsa_message& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::Gsa_message* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::Gsa_message*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::Gsa_message*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::Gst_message& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::Gst_message* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::Gst_message*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::Gst_message*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::Gsv_message& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::Gsv_message* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::Gsv_message*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::Gsv_message*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::Hdt_message& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::Hdt_message* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::Hdt_message*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::Hdt_message*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::Rmc_message& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::Rmc_message* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::Rmc_message*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::Rmc_message*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::Vtg_message& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::Vtg_message* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::Vtg_message*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::Vtg_message*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::Zda_message& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::Zda_message* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::Zda_message*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::Zda_message*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedLegacyData& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedLegacyData* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedLegacyData*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedLegacyData*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedJgd2000Position& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedJgd2000Position* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedJgd2000Position*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedJgd2000Position*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedGpsData& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedGpsData* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedGpsData*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedGpsData*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::Timed19Position& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::Timed19Position* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::Timed19Position*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::Timed19Position*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedRobotPosition& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedRobotPosition* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedRobotPosition*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedRobotPosition*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedMapData& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedMapData* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedMapData*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedMapData*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::Arc& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::Arc* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::Arc*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::Arc*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::Node& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::Node* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::Node*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::Node*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedArcNode& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedArcNode* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedArcNode*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedArcNode*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::Line& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::Line* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::Line*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::Line*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::Circle& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::Circle* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::Circle*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::Circle*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedLandmark& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedLandmark* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedLandmark*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedLandmark*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedMapOrder& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedMapOrder* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedMapOrder*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedMapOrder*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::RobotPosition& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::RobotPosition* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::RobotPosition*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::RobotPosition*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedPath& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedPath* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedPath*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedPath*& _sp);

extern void operator<<=(::CORBA::Any& _a, const RTC::TimedMeshOrder& _s);
extern void operator<<=(::CORBA::Any& _a, RTC::TimedMeshOrder* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, RTC::TimedMeshOrder*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const RTC::TimedMeshOrder*& _sp);

extern void operator<<=(::CORBA::Any& _a, const IIS::TanakaTest& _s);
extern void operator<<=(::CORBA::Any& _a, IIS::TanakaTest* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, IIS::TanakaTest*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const IIS::TanakaTest*& _sp);

extern void operator<<=(::CORBA::Any& _a, const IIS::TimedVelocity& _s);
extern void operator<<=(::CORBA::Any& _a, IIS::TimedVelocity* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, IIS::TimedVelocity*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const IIS::TimedVelocity*& _sp);

extern void operator<<=(::CORBA::Any& _a, const IIS::TimedPosition& _s);
extern void operator<<=(::CORBA::Any& _a, IIS::TimedPosition* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, IIS::TimedPosition*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const IIS::TimedPosition*& _sp);

extern void operator<<=(::CORBA::Any& _a, const IIS::TimedPose2D& _s);
extern void operator<<=(::CORBA::Any& _a, IIS::TimedPose2D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, IIS::TimedPose2D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const IIS::TimedPose2D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const IIS::TimedPose2DSeq& _s);
extern void operator<<=(::CORBA::Any& _a, IIS::TimedPose2DSeq* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, IIS::TimedPose2DSeq*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const IIS::TimedPose2DSeq*& _sp);

extern void operator<<=(::CORBA::Any& _a, const IIS::TimedPath2DSeq& _s);
extern void operator<<=(::CORBA::Any& _a, IIS::TimedPath2DSeq* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, IIS::TimedPath2DSeq*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const IIS::TimedPath2DSeq*& _sp);

extern void operator<<=(::CORBA::Any& _a, const IIS::TimedVelocity2D& _s);
extern void operator<<=(::CORBA::Any& _a, IIS::TimedVelocity2D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, IIS::TimedVelocity2D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const IIS::TimedVelocity2D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const IIS::TimedState& _s);
extern void operator<<=(::CORBA::Any& _a, IIS::TimedState* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, IIS::TimedState*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const IIS::TimedState*& _sp);





#ifdef   USE_stub_in_nt_dll_NOT_DEFINED_intellirobot
# undef  USE_stub_in_nt_dll
# undef  USE_stub_in_nt_dll_NOT_DEFINED_intellirobot
#endif
#ifdef   USE_core_stub_in_nt_dll_NOT_DEFINED_intellirobot
# undef  USE_core_stub_in_nt_dll
# undef  USE_core_stub_in_nt_dll_NOT_DEFINED_intellirobot
#endif
#ifdef   USE_dyn_stub_in_nt_dll_NOT_DEFINED_intellirobot
# undef  USE_dyn_stub_in_nt_dll
# undef  USE_dyn_stub_in_nt_dll_NOT_DEFINED_intellirobot
#endif

#endif  // __intellirobot_hh__

